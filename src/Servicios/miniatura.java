/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Servicios;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Foto;
import Hibernate.entidades.Orden;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import javax.imageio.ImageIO;
import org.hibernate.Session;
import Integral.Herramientas;
import Integral.Imagen;
import java.io.InputStream;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

/**
 *
 * @author I.S.C Salvador
 */
public class miniatura extends javax.swing.JPanel {

    /**
     * Creates new form Elemento
     */
    Foto arch;
    String orden;
    String ruta;
    
    public miniatura(Foto miArchivo,String ord, String edo, String dir) {
        initComponents();
        orden=ord;
        arch=miArchivo;
        ruta=dir;
        try
        {
            System.out.println(ruta+"ordenes/"+orden+"/miniatura/"+arch.getDescripcion());
            javax.swing.JPanel p=new Imagen(ruta+"ordenes/"+orden+"/miniatura/"+arch.getDescripcion(), 76, 79, 1, 1, 76, 79);
            p_foto.removeAll();
            p_foto.add(p);
            p_foto.repaint();
            l_nombre.setText(arch.getDescripcion());
            l_fecha.setText(""+arch.getFecha());
            l_id.setText(""+arch.getIdFoto());
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        Herramientas h=new Herramientas(null, 0);
        if(h.isCerrada(orden)==true || edo.compareTo("")!=0)
            jMenuItem2.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popMenu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        l_nombre = new javax.swing.JLabel();
        l_fecha = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        l_id = new javax.swing.JLabel();
        p_foto = new javax.swing.JPanel();

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        popMenu.add(jMenuItem1);

        jMenuItem2.setText("Eliminar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        popMenu.add(jMenuItem2);

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel1.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel3.setText("Fecha:");

        l_nombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        l_nombre.setText("nombre del archivo");

        l_fecha.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        l_fecha.setText("fecha del archivo");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel4.setText("Id:");

        l_id.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        l_id.setText("Id del archivo");

        javax.swing.GroupLayout p_fotoLayout = new javax.swing.GroupLayout(p_foto);
        p_foto.setLayout(p_fotoLayout);
        p_fotoLayout.setHorizontalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 76, Short.MAX_VALUE)
        );
        p_fotoLayout.setVerticalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(p_foto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(l_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(l_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_id, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(116, 116, 116))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p_foto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(l_id))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(l_fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(l_nombre)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON3)
        {
            popMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            popMenu.setVisible(true);
            evt.consume();
        }
        else
        {
            if (evt.getClickCount() == 2 && !evt.isConsumed()) 
            {
                evt.consume();
                try
                {
                    File archivo=archivo= new File(ruta+"ordenes/"+orden+"/"+arch.getDescripcion());
                    if(archivo.exists()==true)
                        Desktop.getDesktop().open(archivo);
                    else
                        javax.swing.JOptionPane.showMessageDialog(null, "El archivo no existe");
                }catch(Exception e)
                {
                    e.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo abrir el archivo");
                }
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        try
        {
            File archivo = new File(ruta+"ordenes/"+orden+"/"+arch.getDescripcion());
            if(archivo.exists()==true)
                Desktop.getDesktop().open(archivo);
            else
                javax.swing.JOptionPane.showMessageDialog(null, "El archivo no existe");
        }catch(Exception e)
        {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo abrir el archivo");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Session session = HibernateUtil.getSessionFactory().openSession();
            try
            {
                session.beginTransaction().begin();
                Orden ord = (Orden)session.get(Orden.class, arch.getOrden().getIdOrden());
                arch= (Foto)session.get(Foto.class, arch.getIdFoto());
                ord.eliminaFoto(arch);
                session.update(ord);
                session.delete(arch);
                
                File destino = new File(ruta+"ordenes/"+orden+"/miniatura/"+arch.getDescripcion());
                if(destino.exists())
                {
                    if(destino.delete())
                    {
                        destino = new File(ruta+"ordenes/"+orden+"/"+arch.getDescripcion());
                        if(destino.exists())
                        {
                            if(!destino.delete())
                            {
                                session.getTransaction().rollback();
                                File folder = new File(ruta+"ordenes/"+orden+"/miniatura");
                                folder.mkdirs();
                                folder = new File(ruta+"ordenes/"+orden+"/miniatura/"+arch.getDescripcion());
                                String ruta=folder.getPath();
                                javax.swing.JPanel p=new Imagen(ruta, 385, 250, 0, 0, 385, 250);
                                BufferedImage dibujo =new BufferedImage(385, 250, BufferedImage.TYPE_INT_RGB);
                                Graphics g = dibujo.getGraphics();
                                p.paint(g);
                                ImageIO.write((RenderedImage)dibujo, "jpg", folder); // Salvar la imagen en el fichero
                                javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo borrar el archivo xp");
                            }
                            else
                            {
                                session.getTransaction().commit();
                            }
                        }
                        else
                        {
                            session.getTransaction().commit();
                        }
                            
                    }
                    else
                    {
                        session.getTransaction().rollback();
                        javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo borrar la miniatura");
                    }
                }
                else
                {
                    destino = new File(ruta+"ordenes/"+orden+"/"+arch.getDescripcion());
                    if(destino.exists())
                    {
                        if(destino.delete())
                            session.getTransaction().commit();
                        else
                        {
                            session.getTransaction().rollback();
                            File folder = new File(ruta+"ordenes/"+orden+"/miniatura");
                            folder.mkdirs();
                            folder = new File(ruta+"ordenes/"+orden+"/miniatura/"+arch.getDescripcion());
                            String ruta=folder.getPath();
                            javax.swing.JPanel p=new Imagen(ruta, 385, 250, 0, 0, 385, 250);
                            BufferedImage dibujo =new BufferedImage(385, 250, BufferedImage.TYPE_INT_RGB);
                            Graphics g = dibujo.getGraphics();
                            p.paint(g);
                            ImageIO.write((RenderedImage)dibujo, "jpg", folder); // Salvar la imagen en el fichero
                            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo borrar el archivo");
                            session.getTransaction().rollback();
                        }
                    }
                    else
                    {
                        session.getTransaction().commit();
                    }
                }
                this.setVisible(false);
            }catch (Exception ioe)
            {
                session.getTransaction().rollback();
                ioe.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo borrar el archivo");
            }
            if(session!=null)
                if(session.isOpen())
                    session.close(); 
    }//GEN-LAST:event_jMenuItem2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel l_fecha;
    private javax.swing.JLabel l_id;
    private javax.swing.JLabel l_nombre;
    private javax.swing.JPanel p_foto;
    private javax.swing.JPopupMenu popMenu;
    // End of variables declaration//GEN-END:variables
}
