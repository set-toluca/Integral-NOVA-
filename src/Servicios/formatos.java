/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Servicios;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Configuracion;
import Hibernate.entidades.Foto;
import Hibernate.entidades.Orden;
import Hibernate.entidades.Usuario;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.GrayColor;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPTable;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.hibernate.Session;
import Integral.Herramientas;
import Integral.PDF;
import com.itextpdf.text.pdf.AcroFields;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;


/**
 *
 * @author I.S.C Salvador
 */
public class formatos extends javax.swing.JPanel {

    /**
     * Creates new form formatos
     */
    private final Usuario usr;
    private String orden = "";
    private String aseguradora = "";
    String estado = "";
    String sessionPrograma = "";
    Herramientas h;
    String ruta;

    public formatos(String id, Usuario usuar1o, String id_seguro, String edo, String ses) {
        sessionPrograma = ses;
        //estado=edo;
        usr = usuar1o;
        orden = id;
        aseguradora = id_seguro;
        initComponents();
        //b_salida2.setVisible(false);
        ruta = "";
        try {
            FileReader f = new FileReader("config.txt");
            BufferedReader b = new BufferedReader(f);
            if ((ruta = b.readLine()) == null) {
                ruta = "";
            }
            b.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b_etiqueta_expdiente = new javax.swing.JButton();
        b_hoja_unidad = new javax.swing.JButton();
        b_inv_tracto = new javax.swing.JButton();
        b_fecha_promesa = new javax.swing.JButton();
        b_fecha_promesa1 = new javax.swing.JButton();
        b_salida1 = new javax.swing.JButton();
        b_salida3 = new javax.swing.JButton();
        b_encuenta1 = new javax.swing.JButton();
        b_fecha_promesa2 = new javax.swing.JButton();
        b_encuenta2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        b_etiqueta_expdiente.setBackground(new java.awt.Color(2, 135, 242));
        b_etiqueta_expdiente.setForeground(new java.awt.Color(255, 255, 255));
        b_etiqueta_expdiente.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_etiqueta_expdiente.setText("Etiqueta de Expediente");
        b_etiqueta_expdiente.setToolTipText("Generar reporte");
        b_etiqueta_expdiente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_etiqueta_expdiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_etiqueta_expdienteActionPerformed(evt);
            }
        });

        b_hoja_unidad.setBackground(new java.awt.Color(2, 135, 242));
        b_hoja_unidad.setForeground(new java.awt.Color(255, 255, 255));
        b_hoja_unidad.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_hoja_unidad.setText("Hoja de Unidad");
        b_hoja_unidad.setToolTipText("Generar reporte");
        b_hoja_unidad.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_hoja_unidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_hoja_unidadActionPerformed(evt);
            }
        });

        b_inv_tracto.setBackground(new java.awt.Color(2, 135, 242));
        b_inv_tracto.setForeground(new java.awt.Color(255, 255, 255));
        b_inv_tracto.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_inv_tracto.setText("Inventario Fisico");
        b_inv_tracto.setToolTipText("Generar reporte");
        b_inv_tracto.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_inv_tracto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_inv_tractoActionPerformed(evt);
            }
        });

        b_fecha_promesa.setBackground(new java.awt.Color(2, 135, 242));
        b_fecha_promesa.setForeground(new java.awt.Color(255, 255, 255));
        b_fecha_promesa.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_fecha_promesa.setText("Notificación Promesa Entrega");
        b_fecha_promesa.setToolTipText("Generar reporte");
        b_fecha_promesa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_fecha_promesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_fecha_promesaActionPerformed(evt);
            }
        });

        b_fecha_promesa1.setBackground(new java.awt.Color(2, 135, 242));
        b_fecha_promesa1.setForeground(new java.awt.Color(255, 255, 255));
        b_fecha_promesa1.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_fecha_promesa1.setText("Fecha Carta Promesa Axa");
        b_fecha_promesa1.setToolTipText("Generar reporte");
        b_fecha_promesa1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_fecha_promesa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_fecha_promesa1ActionPerformed(evt);
            }
        });

        b_salida1.setBackground(new java.awt.Color(2, 135, 242));
        b_salida1.setForeground(new java.awt.Color(255, 255, 255));
        b_salida1.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_salida1.setText("Tiempo Entrega Garantizado");
        b_salida1.setToolTipText("Generar reporte");
        b_salida1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_salida1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salida1ActionPerformed(evt);
            }
        });

        b_salida3.setBackground(new java.awt.Color(2, 135, 242));
        b_salida3.setForeground(new java.awt.Color(255, 255, 255));
        b_salida3.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_salida3.setText("Hoja de Satisfacción");
        b_salida3.setToolTipText("Generar reporte");
        b_salida3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_salida3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salida3ActionPerformed(evt);
            }
        });

        b_encuenta1.setBackground(new java.awt.Color(2, 135, 242));
        b_encuenta1.setForeground(new java.awt.Color(255, 255, 255));
        b_encuenta1.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_encuenta1.setText("Encuesta Servicio");
        b_encuenta1.setToolTipText("Generar reporte");
        b_encuenta1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_encuenta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_encuenta1ActionPerformed(evt);
            }
        });

        b_fecha_promesa2.setBackground(new java.awt.Color(2, 135, 242));
        b_fecha_promesa2.setForeground(new java.awt.Color(255, 255, 255));
        b_fecha_promesa2.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_fecha_promesa2.setText("Compromiso Servicio Axa");
        b_fecha_promesa2.setToolTipText("Generar reporte");
        b_fecha_promesa2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_fecha_promesa2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_fecha_promesa2ActionPerformed(evt);
            }
        });

        b_encuenta2.setBackground(new java.awt.Color(2, 135, 242));
        b_encuenta2.setForeground(new java.awt.Color(255, 255, 255));
        b_encuenta2.setIcon(new ImageIcon("imagenes/pdf_icon.png"));
        b_encuenta2.setText("Finiquito");
        b_encuenta2.setToolTipText("Generar reporte");
        b_encuenta2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_encuenta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_encuenta2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b_etiqueta_expdiente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_hoja_unidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_inv_tracto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_salida1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(b_salida3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b_fecha_promesa1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_encuenta1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_fecha_promesa2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_encuenta2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_fecha_promesa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(402, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_hoja_unidad)
                            .addComponent(b_fecha_promesa2)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_etiqueta_expdiente)
                        .addComponent(b_fecha_promesa)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_inv_tracto)
                    .addComponent(b_fecha_promesa1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_salida1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_encuenta1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_salida3)
                    .addComponent(b_encuenta2))
                .addContainerGap(90, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_hoja_unidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_hoja_unidadActionPerformed
        // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);

        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            BaseFont bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.NOT_EMBEDDED);
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            PDF reporte = new PDF();
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            reporte.Abrir(PageSize.LETTER, "Hoja de Unidad", "reportes/" + ord.getIdOrden() + "/" + valor + "-unidad.pdf");

            try {
                reporte.agregaObjeto(reporte.crearImagen("imagenes/empresa300115.jpg", 30, -123, 45));
            } catch (Exception e) {
            }

            reporte.contenido.setLineWidth(0.9f);
            reporte.contenido.roundRectangle(370, 640, 190, 65, 5);
            reporte.contenido.rectangle(370, 630, 190, 1);

            reporte.inicioTexto();
            reporte.texto(orden, bf, BaseColor.BLACK, 32, 395, 660);

            reporte.texto("PLACAS:", bf, BaseColor.BLACK, 23, 90, 560);
            try {
                reporte.texto(ord.getNoPlacas(), bf, BaseColor.BLACK, 23, 210, 560);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 17, 210, 560);
            }
            reporte.contenido.rectangle(207, 555, 350, 0);

            //********agregamos marca*************************************************************
            reporte.texto("MARCA:", bf, BaseColor.BLACK, 23, 98, 520);
            reporte.texto(ord.getMarca().getMarcaNombre(), bf, BaseColor.BLACK, 23, 210, 520);
            reporte.contenido.rectangle(207, 515, 350, 0);

            //********agregamos tipo***************************************************************
            reporte.texto("TIPO:", bf, BaseColor.BLACK, 23, 125, 480);
            reporte.texto(ord.getTipo().getTipoNombre(), bf, BaseColor.BLACK, 23, 210, 480);
            reporte.contenido.rectangle(207, 475, 350, 0);

            //********agregamos fecha de ingreso*****************************************************
            reporte.texto("INGRESO:", bf, BaseColor.BLACK, 23, 74, 440);
            try {
                reporte.texto(ord.getFecha().toString(), bf, BaseColor.BLACK, 23, 210, 440);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 23, 210, 440);
            }
            reporte.contenido.rectangle(207, 435, 350, 0);

            //********agregamos fecha de entrega*******************************************************
            reporte.texto("ENTREGA:", bf, BaseColor.BLACK, 23, 70, 400);
            try {
                reporte.texto(ord.getFechaTaller().toString(), bf, BaseColor.BLACK, 23, 210, 400);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 23, 210, 400);
            }
            reporte.contenido.rectangle(207, 395, 350, 0);

            //********agregamos operarios******************************************
            reporte.texto("OPERARIOS:", bf, BaseColor.BLACK, 13, 250, 345);

            //********agregamos responsable de hojalateria******************************************
            reporte.texto("HOJALATERIA:", bf, BaseColor.BLACK, 10, 85, 310);
            try {
                reporte.texto(ord.getEmpleadoByRHojalateria().getNombre(), bf, BaseColor.BLACK, 10, 170, 310);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 10, 170, 310);
            }
            reporte.contenido.rectangle(167, 305, 374, 0);

            //********agregamos responsable de pintura**********************************************
            reporte.texto("PINTURA:", bf, BaseColor.BLACK, 10, 85, 280);
            try {
                reporte.texto(ord.getEmpleadoByRPintura().getNombre(), bf, BaseColor.BLACK, 10, 170, 280);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 10, 170, 280);
            }
            reporte.contenido.rectangle(167, 275, 374, 0);

            //********agregamos reparación******************************************
            reporte.texto("REPARACIÓN:", bf, BaseColor.BLACK, 13, 250, 220);

            reporte.contenido.rectangle(85, 190, 455, 0);
            reporte.contenido.rectangle(85, 170, 455, 0);
            reporte.contenido.rectangle(85, 150, 455, 0);
            reporte.contenido.rectangle(85, 130, 455, 0);
            reporte.contenido.rectangle(85, 110, 455, 0);
            reporte.contenido.rectangle(85, 90, 455, 0);
            reporte.contenido.rectangle(85, 60, 455, 0);
            reporte.contenido.rectangle(85, 40, 455, 0);

            reporte.finTexto();

            reporte.cerrar();
            reporte.visualizar("reportes/" + ord.getIdOrden() + "/" + valor + "-unidad.pdf");
        } catch (Exception e) {
            System.out.println(e);
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) {
            if (session.isOpen()) {
                session.close();
            }
        }
    }//GEN-LAST:event_b_hoja_unidadActionPerformed

    @SuppressWarnings("empty-statement")
    private void b_inv_tractoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_inv_tractoActionPerformed
        // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);
        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            BaseFont bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.NOT_EMBEDDED);
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            session.beginTransaction().begin();
            Configuracion con = (Configuracion) session.get(Configuracion.class, 1);

            PDF reporte = new PDF();
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            reporte.Abrir(PageSize.LETTER, "Inventario Fisico", "reportes/" + ord.getIdOrden() + "/" + valor + "-invFisico.pdf");

            reporte.agregaObjeto(reporte.crearImagen("imagenes/empresa300115.jpg", 00, -28, 17));

            reporte.inicioTexto();
            reporte.contenido.setFontAndSize(bf, 14);
            reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, con.getEmpresa(), 305, 760, 0);
            reporte.contenido.setFontAndSize(bf, 8);
            reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, "HOLAJATERIA Y PINTURA EN GENERAL", 305, 748, 0);

            reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, "COMPRA Y VENTA DE REFACCIONES", 305, 738, 0);
            reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, "INVENTARIO FISICO", 305, 728, 1);

            reporte.texto("SAN PEDRO TOTOLTEPEC, EDO. DE MÉX. A:", bf, BaseColor.BLACK, 8, 30, 707);
            reporte.contenido.rectangle(202, 705, 384, 0);
            reporte.finTexto();

            //**** agregamos cabecera 1**************
            reporte.inicioTexto();
            reporte.contenido.setLineWidth(0.1f);

            reporte.contenido.roundRectangle(30, 625, 556, 65, 5);

            reporte.texto("PÓLIZA No.:", bf, BaseColor.BLACK, 8, 35, 675);
            try {
                reporte.texto(ord.getPoliza(), bf, BaseColor.BLACK, 8, 85, 675);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 85, 675);
            }
            reporte.contenido.rectangle(82, 674, 90, 0);
            reporte.texto("INCISIO:", bf, BaseColor.BLACK, 8, 180, 675);
            try {
                reporte.texto(ord.getInciso(), bf, BaseColor.BLACK, 8, 218, 675);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 218, 675);
            }
            reporte.contenido.rectangle(215, 674, 90, 0);
            reporte.texto("SINIESTRO:", bf, BaseColor.BLACK, 8, 310, 675);
            try {
                reporte.texto(ord.getSiniestro(), bf, BaseColor.BLACK, 8, 360, 675);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 360, 675);
            }
            reporte.contenido.rectangle(358, 674, 90, 0);
            reporte.texto("HORA:", bf, BaseColor.BLACK, 8, 455, 675);
            reporte.contenido.rectangle(485, 674, 95, 0);
            reporte.texto("NOMBRE DEL ASEGURADO:", bf, BaseColor.BLACK, 8, 35, 655);
            try {
                String cliente = ord.getClientes().getNombre();
                if (cliente.length() > 100) {
                    cliente = cliente.substring(0, 99);
                }
                reporte.texto(cliente, bf, BaseColor.BLACK, 8, 148, 656);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 148, 656);
            }
            reporte.contenido.rectangle(145, 654, 439, 0);
            reporte.texto("NOMBRE DEL TERCERO:", bf, BaseColor.BLACK, 8, 35, 635);
            reporte.contenido.rectangle(135, 634, 205, 0);
            reporte.texto("TEL.:", bf, BaseColor.BLACK, 8, 345, 635);
            reporte.contenido.rectangle(370, 634, 214, 0);

            reporte.finTexto();

            //**********agregamos cabecera 2*****************
            reporte.inicioTexto();
            reporte.contenido.setLineWidth(0.1f);
            reporte.contenido.roundRectangle(30, 550, 556, 65, 5);

            reporte.texto("DATOS DEL VEHICULO", bf, BaseColor.BLACK, 8, 35, 600);
            reporte.texto("MARCA:", bf, BaseColor.BLACK, 8, 35, 580);
            try {
                reporte.texto(ord.getMarca().getMarcaNombre(), bf, BaseColor.BLACK, 8, 75, 581);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 75, 580);
            }
            reporte.contenido.rectangle(72, 580, 160, 0);
            reporte.texto("MODELO:", bf, BaseColor.BLACK, 8, 240, 580);
            try {
                reporte.texto(ord.getModelo().toString(), bf, BaseColor.BLACK, 8, 283, 581);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 283, 580);
            }
            reporte.contenido.rectangle(280, 580, 140, 0);
            reporte.texto("TIPO:", bf, BaseColor.BLACK, 8, 427, 580);
            try {
                reporte.texto(ord.getTipo().getTipoNombre(), bf, BaseColor.BLACK, 8, 455, 581);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 455, 581);
            }
            reporte.contenido.rectangle(453, 580, 130, 0);

            reporte.texto("PLACAS:", bf, BaseColor.BLACK, 8, 35, 560);
            try {
                reporte.texto(ord.getNoPlacas(), bf, BaseColor.BLACK, 8, 75, 561);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 75, 561);
            }
            reporte.contenido.rectangle(73, 560, 160, 0);
            reporte.texto("SERIE:", bf, BaseColor.BLACK, 8, 240, 560);
            try {
                reporte.texto(ord.getNoSerie(), bf, BaseColor.BLACK, 8, 275, 561);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 275, 561);
            }
            reporte.contenido.rectangle(273, 560, 140, 0);
            reporte.texto("COLOR:", bf, BaseColor.BLACK, 8, 425, 560);
            try {
                reporte.texto(ord.getColor(), bf, BaseColor.BLACK, 8, 463, 561);
            } catch (Exception e) {
                reporte.texto(" ", bf, BaseColor.BLACK, 8, 463, 561);
            }
            reporte.contenido.rectangle(460, 560, 123, 0);
            reporte.finTexto();

            //*********ESPACIOS EN BLANCO*************
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            reporte.agregaObjeto(new Paragraph(" "));
            
            
            //*************agregamos cabecera 3***************
            reporte.inicioTexto();
            reporte.contenido.setLineWidth(0.1f);
            reporte.contenido.roundRectangle(30, 350, 556, 188, 5);
            reporte.finTexto();
            float tam[] = new float[]{170, 50,10, 50,15, 130,25, 170, 50,10, 50, 15 ,130,25, 170, 50,10 ,50, 15,130};
            Font font1 = new Font(Font.FontFamily.HELVETICA, 7, Font.BOLD);
            Font font = new Font(Font.FontFamily.HELVETICA, 5, Font.BOLD);
            PdfPTable tabla = reporte.crearTabla(20, tam, 100, Element.ALIGN_LEFT);
            tabla.getDefaultCell().setBorder(0);
            tabla.setSpacingBefore(25);
            tabla.setSpacingAfter(10);
            BaseColor cabecera = BaseColor.WHITE;
            BaseColor contenido = BaseColor.WHITE;
            int centro = Element.ALIGN_CENTER;
            int izquierda = Element.ALIGN_LEFT;
            int derecha = Element.ALIGN_RIGHT;
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("SI", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("NO", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("OBSERV.", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("SI", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("NO", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("OBSERV.", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("SI", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("NO", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("", font, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            tabla.addCell(reporte.celda("OBSERV.", font1, cabecera, centro, 0, 1, Rectangle.NO_BORDER));
            
            
            String descripciones[][] = {
                {"FAROS EXTRAS", "TELÉFONO", "LLAVES L 0 X"},
                {"SPOILER", "AIRE ACONDICIONADO", "SEÑALES DE EMERGENCIA"},
                {"ANTENA", "CALEFACCIÓN", "EXTINGUIDOR"},
                {"LIMPIADORES", "ESPEJO RETROVISOR", "TAPETES DE CAJUELA"},
                {"ESPEJOS LATERALES", "ESPEJO DE VANIDAD", "CORNETAS DE AIRE"},
                {"TAPONES", "LLAVES", "BATERIAS"},
                {"ARILLOS RUEBA", "LLAVERO", "PURIFICADOR"},
                {"RINES DE ALUMINIO", "ENCENDEDOR", "ALT. O GEN."},
                {"CALAVERAS", "CENICEROS", "BOCINAS CLAXÓN"},
                {"PLACAS", "TAPETES", "DEP. LIMPIAPARABRISAS"},
                {"TAPÓN DE GASOLINA", "CONSOLA", "MOTOR DE LIMPIADORES"},
                {"RADIO", "CINT. DE SEGURIDAD", "COMPUTADORAS"},
                {"STEREO", "BOCINAS", "OTROS"},
                {"ECUALIZADOR", "LLANTAS DE REFACCIÓN", ""},
                {"RELOJ", "GATO", ""},};
                tabla.addCell(reporte.celda(" ", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
            for (int i = 0; i < 15; i++) {
                
                
                tabla.addCell(reporte.celda(descripciones[i][0], font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.RECTANGLE));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.RECTANGLE));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda(descripciones[i][1], font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.RECTANGLE));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.RECTANGLE));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda(descripciones[i][2], font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.RECTANGLE));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.RECTANGLE));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.NO_BORDER));
                tabla.addCell(reporte.celda("", font, contenido, izquierda, 0, 1, Rectangle.BOTTOM));
            }
            reporte.agregaObjeto(tabla);

            reporte.inicioTexto();
            reporte.contenido.setLineWidth(0.1f);
            reporte.contenido.roundRectangle(30, 210, 556, 130, 5);
            
            reporte.texto("LLANTAS:", bf, BaseColor.BLACK, 8, 33, 325);
            reporte.contenido.rectangle(73, 324, 160, 0);
            reporte.texto("MARCA:", bf, BaseColor.BLACK, 8, 240, 325);
            reporte.contenido.rectangle(275, 324, 145, 0);
            reporte.texto("ESTADO:", bf, BaseColor.BLACK, 8, 427, 325);
            reporte.contenido.rectangle(460, 324, 123, 0);
            reporte.texto("HERRAMIENTAS:", bf, BaseColor.BLACK, 8, 33, 305);
            reporte.contenido.rectangle(103, 305, 318, 0);
            reporte.texto("GAS:", bf, BaseColor.BLACK, 5, 427, 305);
            reporte.texto("VESTIDURAS E INTERIORES:", bf, BaseColor.BLACK, 8, 33, 285);
            reporte.contenido.rectangle(150, 285, 270, 0);
            reporte.texto("CRISTALES:", bf, BaseColor.BLACK, 8, 33, 265);
            reporte.contenido.rectangle(85, 265, 335, 0);
            reporte.texto("MOLDIRAS Y EMBLEMAS:", bf, BaseColor.BLACK, 8, 33, 245);
            reporte.contenido.rectangle(135, 245, 285, 0);
            reporte.texto("DIESEL:", bf, BaseColor.BLACK, 5, 427, 245);
            reporte.texto("OTRAS OBSERVACIONES:", bf, BaseColor.BLACK, 8, 33, 225);
            reporte.contenido.rectangle(135, 225, 285, 0);
            reporte.texto("KILOMETROS:", bf, BaseColor.BLACK, 6, 427, 225);
            reporte.contenido.rectangle(472, 225, 111, 0);

            reporte.contenido.setLineWidth(0.1f);
            reporte.contenido.roundRectangle(450, 253, 130, 50, 5);

            reporte.finTexto();
            reporte.agregaObjeto(reporte.crearImagen("imagenes/img1.jpg", 412, -91, 65));

            reporte.agregaObjeto(reporte.crearImagen("imagenes/car2.jpg", -125, -195, 55));
            reporte.agregaObjeto(reporte.crearImagen("imagenes/car1.jpg", -50, -195, 55));
            reporte.agregaObjeto(reporte.crearImagen("imagenes/car3.jpg", 190, -203, 65));
            reporte.agregaObjeto(reporte.crearImagen("imagenes/car4.jpg", -70, -198, 55));

            reporte.inicioTexto();
            reporte.contenido.setLineWidth(0.1f);
            reporte.contenido.roundRectangle(30, 40, 556, 90, 5);
            reporte.texto("FIRMAS DE CONFORMIDAD", bf, BaseColor.BLACK, 11, 34, 110);

            reporte.texto("ASEGURADO O CONDUCTOR", bf, BaseColor.BLACK, 8, 55, 50);
            reporte.contenido.rectangle(40, 60, 141, 0);
            reporte.texto("OPERADOR DE GRÚA", bf, BaseColor.BLACK, 8, 285, 50);
            reporte.contenido.rectangle(265, 60, 116, 0);
            reporte.texto("ENCARGADO DE TALLER", bf, BaseColor.BLACK, 8, 465, 50);
            reporte.contenido.rectangle(445, 60, 130, 0);

            reporte.finTexto();

            reporte.cerrar();
            reporte.visualizar("reportes/" + ord.getIdOrden() + "/" + valor + "-invFisico.pdf");

        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) {
            if (session.isOpen()) {
                session.close();
            }
        }
    }//GEN-LAST:event_b_inv_tractoActionPerformed

    private void b_etiqueta_expdienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_etiqueta_expdienteActionPerformed
        // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);

        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            BaseFont bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.NOT_EMBEDDED);
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            PDF reporte = new PDF();
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            reporte.Abrir(PageSize.LETTER, "Etiqueta de Expediente", "reportes/" + ord.getIdOrden() + "/" + valor + "-Etiqueta.pdf");
            int op = 39;
            if (ord.getCompania().getFoto() != null) {
                reporte.agregaObjeto(reporte.crearImagen(ord.getCompania().getFoto(), 401, -86, 70, 50, 270));
                op = -10;
            }

            reporte.contenido.setLineWidth(0.5f);
            reporte.contenido.setColorStroke(new GrayColor(0.2f));
            reporte.contenido.setColorFill(new GrayColor(0.9f));
            reporte.contenido.roundRectangle(435, 440, 54, 301, 5);

            reporte.inicioTexto();
            try {
                String nom = ord.getClientes().getNombre();
                if (nom.length() > 29) {
                    nom = nom.substring(0, 29);
                }
                switch (ord.getTipoCliente()) {
                    case "1":
                        reporte.texto("ASEG: " + nom, bf, BaseColor.BLACK, 7, 478, 665, 270);
                        break;
                    case "2":
                        reporte.texto("TERC:" + nom, bf, BaseColor.BLACK, 7, 478, 665, 270);
                        break;
                    case "3":
                        reporte.texto("TERC.ASEG:" + nom, bf, BaseColor.BLACK, 7, 478, 665, 270);
                        break;

                    case "4":
                        reporte.texto("PART: " + nom, bf, BaseColor.BLACK, 7, 478, 665, 270);
                        break;
                }
            } catch (Exception e) {
            }

            reporte.texto("EXP: " + orden, bf, BaseColor.BLACK, 7, 478, 490, 270);
            reporte.texto("MARCA: " + ord.getMarca().getMarcaNombre(), bf, BaseColor.BLACK, 7, 468, 665, 270);

            reporte.texto("MODELO: " + ord.getModelo(), bf, BaseColor.BLACK, 7, 458, 665, 270);
            reporte.texto("TIPO: " + ord.getTipo().getTipoNombre(), bf, BaseColor.BLACK, 7, 458, 590, 270);

            if (ord.getNoPlacas() != null) {
                reporte.texto("PLACAS: " + ord.getNoPlacas(), bf, BaseColor.BLACK, 7, 448, 665, 270);
            } else {
                reporte.texto("PLACAS: ", bf, BaseColor.BLACK, 8, 448, 665, 270);
            }

            reporte.texto("FECHA: " + ord.getFecha().toString(), bf, BaseColor.BLACK, 7, 448, 590, 270);

            if (ord.getPoliza() != null) {
                reporte.texto("NP: " + ord.getPoliza(), bf, BaseColor.BLACK, 7, 448, 520, 270);
            } else {
                reporte.texto("NP: ", bf, BaseColor.BLACK, 7, 448, 520, 270);
            }

            if (ord.getSiniestro() != null) {
                reporte.texto("SIN: " + ord.getSiniestro(), bf, BaseColor.BLACK, 7, 468, 518, 270);
            } else {
                reporte.texto("SIN: ", bf, BaseColor.BLACK, 7, 468, 518, 270);
            }

            reporte.finTexto();

            Foto[] fotos = (Foto[]) ord.getFotos().toArray(new Foto[0]);
            for (int k = 0; k < fotos.length - 1; k++) {
                for (int f = 0; f < (fotos.length - 1) - k; f++) {
                    if (fotos[f].getFecha().after(fotos[f + 1].getFecha()) == true) {
                        Foto aux;
                        aux = fotos[f];
                        fotos[f] = fotos[f + 1];
                        fotos[f + 1] = aux;
                    }
                }
            }
            if (fotos.length > 0) {   // 395 360, 300 90
                reporte.agregaObjeto(reporte.crearImagen("ordenes/" + ord.getIdOrden() + "/miniatura/" + fotos[0].getDescripcion(), op, -315, 360, 300, 0));
            } else {
            }

            reporte.cerrar();
            reporte.visualizar("reportes/" + ord.getIdOrden() + "/" + valor + "-Etiqueta.pdf");
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) {
            if (session.isOpen()) {
                session.close();
            }
        }
    }//GEN-LAST:event_b_etiqueta_expdienteActionPerformed

    private void b_salida1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salida1ActionPerformed
                 // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);

        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            Configuracion con = (Configuracion) session.get(Configuracion.class, 1);
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            PdfReader reader = new PdfReader("imagenes/PlantillaEntrega.pdf");
            PdfStamper stamp = new PdfStamper(reader,
                    new FileOutputStream("reportes/"+ ord.getIdOrden() +"/"+ valor +"TiempoEntrega.pdf"));
            PdfContentByte cb
                    = stamp.getUnderContent(1);
            AcroFields fdfDoc = stamp.getAcroFields();
            // Creo una fuente
            BaseFont bf
                    = BaseFont.createFont(BaseFont.HELVETICA,
                            BaseFont.CP1252, BaseFont.EMBEDDED);

        //TALLER
           
           cb.beginText();
            try{
                fdfDoc.setField("Taller", con.getEmpresa());
            }catch(Exception e){
                fdfDoc.setField("Taller", "");
            }
            
            //SINIESTRO
            
            try{
                fdfDoc.setField("Siniestro",ord.getSiniestro());
            }catch(Exception e){
                fdfDoc.setField("Siniestro","");
            }
        //NOMBRE DEL ASEGURADO
            try{
                fdfDoc.setField("Nombre del asegurado", ord.getClientes().getNombre());
            }catch(Exception e){
                fdfDoc.setField("Nombre del asegurado", "");
            }
            
            //MARCA
            try{
                fdfDoc.setField("Marca", ord.getMarca().getMarcaNombre());
            }catch(Exception e){
                fdfDoc.setField("Marca", "");
            }
            
            //MODELO
            try{
                fdfDoc.setField("Modelo", ord.getModelo().toString());
            }catch(Exception e){
                fdfDoc.setField("Modelo", "");
            }
            //TIPO
            try{
                fdfDoc.setField("Tipo", ord.getTipo().getTipoNombre());
            }catch(Exception e){
                fdfDoc.setField("Tipo", "");
            }
            //PLACAS
            try{
                fdfDoc.setField("Placas", ord.getNoPlacas());
            }catch(Exception e){
                fdfDoc.setField("Placas", "");
            }
            //FECHA PROMESA.
            try{
                fdfDoc.setField("Fecha compromiso de entrega", ord.getFechaCliente().toString());
            }catch(Exception e){
                fdfDoc.setField("Fecha compromiso de entrega", "");
            }
            cb.endText();

            stamp.close();
            PDF reporte = new PDF();
            reporte.visualizar("reportes/"+ ord.getIdOrden() +"/"+ valor +"TiempoEntrega.pdf");
            reporte.cerrar();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) 
            if (session.isOpen()) 
                session.close();

    }//GEN-LAST:event_b_salida1ActionPerformed

    private void b_fecha_promesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_fecha_promesaActionPerformed
        // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);

        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            Configuracion con = (Configuracion) session.get(Configuracion.class, 1);
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            PdfReader reader = new PdfReader("imagenes/PlantillaFechaAxa.pdf");
            PdfStamper stamp = new PdfStamper(reader,
                    new FileOutputStream("reportes/"+ord.getIdOrden()+"/"+valor+"NotificacionPromesaAxa.pdf"));
            PdfContentByte cb
                    = stamp.getUnderContent(1);
            AcroFields fdfDoc = stamp.getAcroFields();
            // Creo una fuente
            BaseFont bf
                    = BaseFont.createFont(BaseFont.HELVETICA,
                            BaseFont.CP1252, BaseFont.EMBEDDED);

            //TALLER
            cb.beginText();
            
            //SINIESTRO
            try{
                fdfDoc.setField("Siniestro", ord.getSiniestro());
            }catch(Exception e){
                fdfDoc.setField("Siniestro", "");
            }
            //FECHA SINIESTRO
            try{
                fdfDoc.setField("Fecha Siniestro", ord.getFechaSiniestro().toString());
            }catch(Exception e){
                fdfDoc.setField("Fecha Siniestro", "");
            }
            //NOMBRE DEL TALLER
            try{
                fdfDoc.setField("Nombre", con.getEmpresa());
            }catch(Exception e){
                fdfDoc.setField("Nombre", "");
            }
            //DIRECCION DEL TALLER
            try{
                fdfDoc.setField("Direccion", con.getDireccion());
            }catch(Exception e){
                fdfDoc.setField("Direccion", "");
            }
            
            //FECHA INGRESA UNIDAD
            try{
                fdfDoc.setField("Fechas", ord.getFecha().toString());
            }catch(Exception e){
                fdfDoc.setField("Fechas", "");
            }
            
            //FECHA PROMESA
            try{
                fdfDoc.setField("Fecha Promesa", ord.getFechaCliente().toString());
            }catch(Exception e){
                fdfDoc.setField("Fecha Promesa", "");
            }
            cb.endText();

            stamp.close();
            PDF reporte = new PDF();
            reporte.visualizar("reportes/"+ord.getIdOrden()+"/"+valor+"NotificacionPromesaAxa.pdf");
            reporte.cerrar();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) {
            if (session.isOpen()) {
                session.close();
            }
        }

    }//GEN-LAST:event_b_fecha_promesaActionPerformed

    private void b_fecha_promesa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_fecha_promesa1ActionPerformed
        // TODO add your handling code here:
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            BaseFont bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.WINANSI, BaseFont.NOT_EMBEDDED);
            Orden ord=(Orden)session.get(Orden.class, Integer.parseInt(orden));
            
            PDF reporte = new PDF();
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor=dateFormat.format(fecha);
            File folder = new File("reportes/"+ord.getIdOrden());
            folder.mkdirs();
            reporte.Abrir(PageSize.LETTER, "CARTA FECHA PROMESA", "reportes/"+ord.getIdOrden()+"/"+valor+"CartaFechapromesa.pdf");

            reporte.agregaObjeto(reporte.crearImagen("imagenes/empresa300115.jpg", 00, -40, 19));
            
            reporte.contenido.setLineWidth(0.5f);
            reporte.contenido.setColorStroke(new GrayColor(0.2f));
            reporte.contenido.setColorFill(new GrayColor(0.9f));
            //reporte.contenido.roundRectangle(30, 710, 550, 60, 5);
            
            reporte.inicioTexto();
                reporte.contenido.setFontAndSize(bf, 14);
                reporte.contenido.setColorFill(BaseColor.BLACK);
                reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, "CARTA DE ACEPTACIÓN DE REPARACIÓN", 430, 740, 0);
                
                reporte.texto("Fecha: ______________", bf, BaseColor.BLACK, 10, 460, 720);
                reporte.texto("Fecha de ingreso: "+ord.getFecha().toString(), bf, BaseColor.BLACK, 10, 407, 700);
                reporte.contenido.rectangle(490, 698, 80, 0);
                
                if(ord.getSiniestro()!=null)
                    reporte.texto("No° de Siniestro: "+ord.getSiniestro(), bf, BaseColor.BLACK, 10, 50, 700);
                else
                    reporte.texto("No° de Siniestro: ", bf, BaseColor.BLACK, 10, 50, 700);
                reporte.contenido.rectangle(123, 698, 100, 0);
                
                if(ord.getCompania().getNombre()!=null)
                reporte.texto("Aseguradora: "+ord.getCompania().getNombre(), bf, BaseColor.BLACK, 10, 50, 680);
                else
                    reporte.texto("Aseguradora: ", bf, BaseColor.BLACK, 10, 50, 680);
                reporte.contenido.rectangle(113, 678, 190, 0);
                
                if(ord.getClientes().getNombre()!=null)
                    reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, ord.getClientes().getNombre(), 300, 640, 0);
                else
                    reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, ord.getClientes().getNombre(), 300, 640, 0);    
                reporte.contenido.rectangle(180, 638, 240, 0);
                reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, "Nombre del Asgurado o Tercero", 300, 630, 0);
                
                Configuracion con= (Configuracion)session.get(Configuracion.class, 1);
                
                reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, con.getEmpresa(), 300, 600, 0);
                reporte.contenido.rectangle(180, 598, 240, 0);
                reporte.contenido.showTextAligned(PdfContentByte.ALIGN_CENTER, "Nombre del Centro de Reparación", 300, 590, 0);
                
                if(ord.getMarca().getMarcaNombre()!=null)
                    reporte.texto("Marca: "+ord.getMarca().getMarcaNombre(), bf, BaseColor.BLACK, 10, 100, 550);
                else
                    reporte.texto("Marca: ", bf, BaseColor.BLACK, 10, 100, 550);
                reporte.contenido.rectangle(130, 548, 130, 0);
                
                if(ord.getModelo()!=null)
                    reporte.texto("Modelo: "+ord.getModelo(), bf, BaseColor.BLACK, 10, 310, 550);
                else
                    reporte.texto("Modelo: ", bf, BaseColor.BLACK, 10, 310, 550);
                reporte.contenido.rectangle(343, 548, 130, 0);
                
                if(ord.getTipo().getTipoNombre()!=null)
                    reporte.texto("Tipo: "+ord.getTipo().getTipoNombre(), bf, BaseColor.BLACK, 10, 107, 520);
                else
                    reporte.texto("Tipo: ", bf, BaseColor.BLACK, 10, 107, 520);
                reporte.contenido.rectangle(130, 518, 130, 0);
                
                if(ord.getModelo()!=null)
                    reporte.texto("Placas: "+ord.getModelo(), bf, BaseColor.BLACK, 10, 308, 520);
                else
                    reporte.texto("Placas: ", bf, BaseColor.BLACK, 10, 308, 520);
                reporte.contenido.rectangle(343, 518, 130, 0);
                
                reporte.texto("ESTIMADO ASEGURADO/TERCERO:"+ord.getModelo(), bf, BaseColor.BLACK, 10, 50, 470);
                reporte.texto("POR MEDIO DE LA PRESENTE LE NOTIFICAMOS QUE ESTE CENTRO DE REPARACIÓN SE COMPROMETE A", bf, BaseColor.BLACK, 10, 50, 435);
                reporte.texto("ENTREGAR LA UNIDAD ANTES MENCIONADA EN LA FECHA PROMESA QUE ACONTINUACIÓN  SE INFORMA", bf, BaseColor.BLACK, 10, 50, 415);
                reporte.texto("EL CAMBIO DE DICHA FECHA SOLAMENTE PODRA HACERSE CON PLENO CONOCIMIENTO Y AUTORIZACIÓN", bf, BaseColor.BLACK, 10, 50, 395);
                reporte.texto("DE LA ASEGURADORA, HACIENDO USO Y EN APEGO A LAS CONDICIONES GENERALES DEL ASEGURADO.", bf, BaseColor.BLACK, 10, 50, 375);
                
                if(ord.getFechaCliente()!=null)
                    reporte.texto("FECHA PROMESA: "+ord.getFechaCliente().toString(), bf, BaseColor.BLACK, 10, 390, 320);
                else
                    reporte.texto("FECHA PROMESA: ", bf, BaseColor.BLACK, 10, 390, 320);
                reporte.contenido.rectangle(480, 318, 90, 0);
                
                reporte.texto("FIRMA Y SELLO", bf, BaseColor.BLACK, 10, 110, 190);
                reporte.texto("JEFE DEL CENTRO DE REPARACIÓN", bf, BaseColor.BLACK, 10, 60, 175);
                reporte.contenido.rectangle(55, 200, 210, 110);
                reporte.agregaObjeto(reporte.crearImagen("imagenes/sello.png", -70, -550, 200, 100, 0));
                
                reporte.texto("FIRMA", bf, BaseColor.BLACK, 10, 430, 190);
                reporte.texto("ASEGURADO O TERCERO", bf, BaseColor.BLACK, 10, 390, 175);
                reporte.contenido.rectangle(355, 200, 210, 110);
                
            reporte.finTexto();
           
            reporte.visualizar("reportes/"+ord.getIdOrden()+"/"+valor+"CartaFechapromesa.pdf");
           reporte.cerrar();
        }catch(Exception e)
        {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if(session!=null)
            if(session.isOpen())
                session.close();
        
    }//GEN-LAST:event_b_fecha_promesa1ActionPerformed

    private void b_salida3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salida3ActionPerformed
        // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);

        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            Configuracion con = (Configuracion) session.get(Configuracion.class, 1);
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            PdfReader reader = new PdfReader("imagenes/PlantillaHojaSatisfaccion.pdf");
            PdfStamper stamp = new PdfStamper(reader,
                    new FileOutputStream("reportes/"+ord.getIdOrden()+"/"+valor+"HojaSatisfaccion.pdf"));
            PdfContentByte cb
                    = stamp.getUnderContent(1);
            AcroFields fdfDoc = stamp.getAcroFields();
            // Creo una fuente
            BaseFont bf
                    = BaseFont.createFont(BaseFont.HELVETICA,
                            BaseFont.CP1252, BaseFont.EMBEDDED);

            //TALLER
            cb.beginText();
            try{
                fdfDoc.setField("Poliza", ord.getPoliza());
            }catch(Exception e){
                fdfDoc.setField("Poliza", "");
            }
            //SINIESTRO
            try{
               fdfDoc.setField("Siniestro", ord.getSiniestro());
            }catch(Exception e){
                fdfDoc.setField("Siniestro", "");
            }

            //PLACAS
            try{
                fdfDoc.setField("Placas", ord.getNoPlacas());
            }catch(Exception e){
                fdfDoc.setField("Placas", "");
            }
            //NOMBRE DEL ASEGURADO
            try{
                fdfDoc.setField("Asegurado", ord.getClientes().getNombre());
            }catch(Exception e){
                fdfDoc.setField("Asegurado", "");
            }
            //TELEFONO ASEGURADO
            try{
                fdfDoc.setField("Tel asegurado", ord.getClientes().getTelefono());
            }catch(Exception e){
                fdfDoc.setField("Tel asegurado", "");
            }
            //FECHA INGRESO
            try{
                fdfDoc.setField("Fecha de Ingreso", ord.getFecha().toString());
            }catch(Exception e){
                fdfDoc.setField("Fecha de Ingreso", "");
            }
            //FECHA PROMESA
            try{
                fdfDoc.setField("Fecha Promesa", ord.getFechaCliente().toString());
            }catch(Exception e){
                fdfDoc.setField("Fecha Promesa", "");
            }
            cb.endText();

            stamp.close();
            PDF reporte = new PDF();
            reporte.visualizar("reportes/"+ord.getIdOrden()+"/"+valor+"HojaSatisfaccion.pdf");
            reporte.cerrar();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) {
            if (session.isOpen()) {
                session.close();
            }
        }
    }//GEN-LAST:event_b_salida3ActionPerformed

    private void b_encuenta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_encuenta1ActionPerformed
        // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);

        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            PdfReader reader = new PdfReader("imagenes/PlantillaEncuenta.pdf");
            PdfStamper stamp = new PdfStamper(reader,
                    new FileOutputStream("reportes/"+ord.getIdOrden()+"/"+valor+"EncuentaServicio.pdf"));
            PdfContentByte cb
                    = stamp.getUnderContent(1);
            AcroFields fdfDoc = stamp.getAcroFields();
            // Creo una fuente
            BaseFont bf
                    = BaseFont.createFont(BaseFont.HELVETICA,
                            BaseFont.CP1252, BaseFont.EMBEDDED);

            //TALLER
            cb.beginText();
            
            //MARCA
            try{
               fdfDoc.setField("MARCA", ord.getMarca().getMarcaNombre());
            }catch(Exception e){
                fdfDoc.setField("MARCA", "");
            }

            //TIPO
            try{
                fdfDoc.setField("TIPO", ord.getTipo().getTipoNombre());
            }catch(Exception e){
                fdfDoc.setField("TIPO", "");
            }
            //SINIESTRO
            try{
                fdfDoc.setField("SINIESTRO", ord.getSiniestro());
            }catch(Exception e){
                fdfDoc.setField("SINIESTRO", "");
            }
            //MODELO
            try{
                fdfDoc.setField("MODELO", ord.getModelo().toString());
            }catch(Exception e){
                fdfDoc.setField("MODELO", "");
            }
            //PLACAS
            try{
                fdfDoc.setField("PLACAS", ord.getNoPlacas());
            }catch(Exception e){
                fdfDoc.setField("PLACAS", "");
            }
            cb.endText();

            stamp.close();
            PDF reporte = new PDF();
            reporte.visualizar("reportes/"+ord.getIdOrden()+"/"+valor+"EncuentaServicio.pdf");
            reporte.cerrar();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) {
            if (session.isOpen()) {
                session.close();
            }
        }
        
    }//GEN-LAST:event_b_encuenta1ActionPerformed

    private void b_fecha_promesa2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_fecha_promesa2ActionPerformed
        // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);

        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            Configuracion con = (Configuracion) session.get(Configuracion.class, 1);
            Date fecha = new Date();
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            PdfReader reader = new PdfReader("imagenes/PlantillaCompromisoAxa.pdf");
            PdfStamper stamp = new PdfStamper(reader,
                    new FileOutputStream("reportes/"+ord.getIdOrden()+"/"+valor+"CompromisoAxa.pdf"));
            PdfContentByte cb
                    = stamp.getUnderContent(1);
            AcroFields fdfDoc = stamp.getAcroFields();
            // Creo una fuente
            BaseFont bf
                    = BaseFont.createFont(BaseFont.HELVETICA,
                            BaseFont.CP1252, BaseFont.EMBEDDED);

            //TALLER
            cb.beginText();
            
            //SINIESTRO
            try{
                fdfDoc.setField("No Siniestro", ord.getSiniestro());
            }catch(Exception e){
                fdfDoc.setField("Siniestro", "");
            }
            //NOMBRE DE ASEGURADO 
            try{
                fdfDoc.setField("Nombre", ord.getClientes().getNombre());
            }catch(Exception e){
                fdfDoc.setField("Nombre", "");
            }
            //DOMICILIO DE ASEGURADO
            try{
                fdfDoc.setField("Domicilio", ord.getClientes().getDireccion());
            }catch(Exception e){
                fdfDoc.setField("Domicilio", "");
            }
            //TELEFONO DEL ASEGURADO
            try{
                fdfDoc.setField("Telefono", ord.getClientes().getTelefono());
            }catch(Exception e){
                fdfDoc.setField("Telefono", "");
            }
            
            //EMAIL DEL ASEGURADO
            try{
                fdfDoc.setField("Email", ord.getClientes().getEmail());
            }catch(Exception e){
                fdfDoc.setField("Email", "");
            }
            
            //NOMBRE DEL TALLER
            try{
                fdfDoc.setField("Taller", con.getEmpresa());
            }catch(Exception e){
                fdfDoc.setField("Taller", "");
            }
            cb.endText();

            stamp.close();
            PDF reporte = new PDF();
            reporte.visualizar("reportes/"+ord.getIdOrden()+"/"+valor+"CompromisoAxa.pdf");
            reporte.cerrar();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) {
            if (session.isOpen()) {
                session.close();
            }
        }

    }//GEN-LAST:event_b_fecha_promesa2ActionPerformed

    private void b_encuenta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_encuenta2ActionPerformed
        // TODO add your handling code here:
                        // TODO add your handling code         // TODO add your handling code here:
        h = new Herramientas(usr, 0);
        h.session(sessionPrograma);

        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            Orden ord = (Orden) session.get(Orden.class, Integer.parseInt(orden));
            Configuracion con = (Configuracion) session.get(Configuracion.class, 1);
            Date fecha = new Date();
            String Mes[]={"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyyHH-mm-ss");//YYYY-MM-DD HH:MM:SS
            String valor = dateFormat.format(fecha);
            Calendar fecha1 = new GregorianCalendar();
            int año = fecha1.get(Calendar.YEAR);
            int mes = fecha1.get(Calendar.MONTH);
            int dia = fecha1.get(Calendar.DAY_OF_MONTH);
            File folder = new File("reportes/" + ord.getIdOrden());
            folder.mkdirs();
            PdfReader reader = new PdfReader("imagenes/PlantillaFiniquitoAxa.pdf");
            PdfStamper stamp = new PdfStamper(reader,
                    new FileOutputStream("reportes/"+ord.getIdOrden()+"/"+valor+"FiniquitoAxa.pdf"));
            PdfContentByte cb
                    = stamp.getUnderContent(1);
            AcroFields fdfDoc = stamp.getAcroFields();
            // Creo una fuente
            BaseFont bf
                    = BaseFont.createFont(BaseFont.HELVETICA,
                            BaseFont.CP1252, BaseFont.EMBEDDED);

            //TALLER
            cb.beginText();
            
            //SINIESTRO
            try{
                fdfDoc.setField("Siniestro", ord.getSiniestro());
            }catch(Exception e){
                fdfDoc.setField("Siniestro", "");
            }
            //NOMBRE DE ASEGURADO 
            try{
                fdfDoc.setField("Dia", String.valueOf(dia));
            }catch(Exception e){
                fdfDoc.setField("Dia", "");
            }
            //DOMICILIO DE ASEGURADO
            try{
                fdfDoc.setField("Mes", String.valueOf(Mes[mes]));
            }catch(Exception e){
                fdfDoc.setField("Mes", "");
            }
            //TELEFONO DEL ASEGURADO
            try{
                fdfDoc.setField("Año", String.valueOf(año));
            }catch(Exception e){
                fdfDoc.setField("Año", "");
            }
            
            //EMAIL DEL ASEGURADO
            try{
                fdfDoc.setField("Text5", "DYW010050000");
            }catch(Exception e){
                fdfDoc.setField("Text5", "");
            }
            
            //NOMBRE DEL TALLER
            try{
                fdfDoc.setField("Aplicar", "NO APLICA");
            }catch(Exception e){
                fdfDoc.setField("Aplicar", "");
            }
            cb.endText();

            stamp.close();
            PDF reporte = new PDF();
            reporte.visualizar("reportes/"+ord.getIdOrden()+"/"+valor+"FiniquitoAxa.pdf");
            reporte.cerrar();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(this, "No se pudo realizar el reporte si el archivo esta abierto");
        }
        if (session != null) {
            if (session.isOpen()) {
                session.close();
            }
        }
    }//GEN-LAST:event_b_encuenta2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_encuenta1;
    private javax.swing.JButton b_encuenta2;
    private javax.swing.JButton b_etiqueta_expdiente;
    private javax.swing.JButton b_fecha_promesa;
    private javax.swing.JButton b_fecha_promesa1;
    private javax.swing.JButton b_fecha_promesa2;
    private javax.swing.JButton b_hoja_unidad;
    private javax.swing.JButton b_inv_tracto;
    private javax.swing.JButton b_salida1;
    private javax.swing.JButton b_salida3;
    // End of variables declaration//GEN-END:variables

}
