/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Servicios;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Archivo;
import Hibernate.entidades.Orden;
import java.awt.Desktop;
import java.io.File;
import org.hibernate.Session;
import Integral.Herramientas;
import Integral.Imagen;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author I.S.C Salvador
 */
public class Elemento extends javax.swing.JPanel {

    /**
     * Creates new form Elemento
     */
    Archivo arch;
    private Session session;
    String orden;
    String ruta;
    
    public Elemento(Archivo miArchivo,String ord, String edo, String dir) {
        initComponents();
        orden=ord;
        arch=miArchivo;
        ruta=dir;
        try
        {
            File f=new File(ruta+"ordenes/"+orden+"/archivos/"+arch.getNombreDocumento());
            Imagen op;
            //JFileChooser jf=new JFileChooser();
            //jf.setSelectedFile(f);
            FileSystemView fileSystemView = FileSystemView.getFileSystemView(); 
            l_img.setIcon(fileSystemView.getSystemIcon(f));
            //l_img.setIcon(jf.getFileSystemView().getSystemIcon(f));
            l_nombre.setText(f.getName());
            l_fecha.setText(""+arch.getFechaDocumento());
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        
        Herramientas h=new Herramientas(null, 0);
        if(h.isCerrada(orden)==true || edo.compareTo("")!=0)
            jMenuItem2.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popMenu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        l_nombre = new javax.swing.JLabel();
        l_fecha = new javax.swing.JLabel();
        l_img = new javax.swing.JLabel();

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        popMenu.add(jMenuItem1);

        jMenuItem2.setText("Eliminar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        popMenu.add(jMenuItem2);

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel1.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel3.setText("Fecha:");

        l_nombre.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        l_nombre.setText("nombre del archivo");

        l_fecha.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        l_fecha.setText("fecha del archivo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(l_img, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(l_fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(l_nombre)))
            .addComponent(l_img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON3)
        {
            popMenu.show(evt.getComponent(), evt.getX(), evt.getY());
            popMenu.setVisible(true);
            evt.consume();
        }
        else
        {
            if (evt.getClickCount() == 2 && !evt.isConsumed()) 
            {
                evt.consume();
                try
                {
                    File archivo = new File(ruta+"ordenes/"+orden+"/archivos/"+arch.getNombreDocumento());
                    if(ruta.contains("http:")==true || ruta.contains("\\\\")==true || ruta.contains("//")==true || ruta.contains("////")==true)
                    {
                        String aux =arch.getNombreDocumento().replaceAll(" ", "%20");
                        Desktop.getDesktop().browse(getFileURI(ruta+"ordenes\\"+orden+"\\archivos\\"+aux));
                    }
                    else
                    {
                        if(archivo.exists()==true)
                            Desktop.getDesktop().open(archivo);
                        else
                            javax.swing.JOptionPane.showMessageDialog(null, "El archivo no existe");
                    }
                }catch(Exception e)
                {
                    e.printStackTrace();
                    javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo abrir el archivo");
                }
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        try
        {
            File archivo = new File(ruta+"ordenes/"+orden+"/archivos/"+arch.getNombreDocumento());
            if(ruta.contains("http:")==true || ruta.contains("\\\\")==true || ruta.contains("//")==true || ruta.contains("////")==true)
            {
                String aux =arch.getNombreDocumento().replaceAll(" ", "%20");
                Desktop.getDesktop().browse(getFileURI(ruta+"ordenes\\"+orden+"\\archivos\\"+aux));
            }
            else
            {
                if(archivo.exists()==true)
                    Desktop.getDesktop().open(archivo);
                else
                    javax.swing.JOptionPane.showMessageDialog(null, "El archivo no existe");
            }
            /*File archivo = new File(ruta+"ordenes/"+orden+"/archivos/"+arch.getNombreDocumento());
            if(archivo.exists()==true)
                Desktop.getDesktop().open(archivo.getAbsoluteFile());
            else
                javax.swing.JOptionPane.showMessageDialog(null, "El archivo no existe");*/
        }catch(Exception e)
        {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo abrir el archivo");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction().begin();
            Orden ord = (Orden)session.get(Orden.class, arch.getOrden().getIdOrden());
            arch= (Archivo)session.get(Archivo.class, arch.getIdArchivo());
            File destino = new File(ruta+"ordenes/"+orden+"/archivos/"+arch.getNombreDocumento());
            destino.delete();
            ord.eliminaArchivo(arch);
            session.update(ord);
            session.delete(arch);
            session.getTransaction().commit();
            this.setVisible(false);
        }catch (Exception ioe)
        {
            session.getTransaction().rollback();
            ioe.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(null, "Error no se pudo borrar el archivo");
        }
        if(session!=null)
            if(session.isOpen())
                session.close(); 
    }//GEN-LAST:event_jMenuItem2ActionPerformed


    
    
      public void launchFile(File file)
  {
    if(!Desktop.isDesktopSupported()) return;
    Desktop dt = Desktop.getDesktop();
    try
    {
      dt.open(file);
    } catch (IOException ex)
    {
      //this is sometimes necessary with files on other servers ie \\xxx\xxx.xls
      launchFile(file.getPath());
    }
  }
  
  //this can launch both local and remote files
  public void launchFile(String filePath)
  {
    if(filePath == null || filePath.trim().length() == 0) return;
    if(!Desktop.isDesktopSupported()) return;
    Desktop dt = Desktop.getDesktop();
    try
    {      
       dt.browse(getFileURI(filePath));
    } catch (Exception ex)
    {
      ex.printStackTrace();
     }
   }

  //generate uri according to the filePath
  private URI getFileURI(String filePath)
  {
    URI uri = null;
    filePath = filePath.trim();
    if(filePath.indexOf("http") == 0 || filePath.indexOf("\\") == 0)
    {
      if(filePath.indexOf("\\") == 0) filePath = "file:" + filePath;
      try
      {
        filePath = filePath.replaceAll(" ", "%20");
        URL url = new URL(filePath);
        uri = url.toURI();
      } catch (MalformedURLException ex)
      {
        ex.printStackTrace();
      }
      catch (URISyntaxException ex)
      {
        ex.printStackTrace();
      }
    }
    else
    {
      File file = new File(filePath);
      uri = file.toURI();
    }
    return uri;
  }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel l_fecha;
    private javax.swing.JLabel l_img;
    private javax.swing.JLabel l_nombre;
    private javax.swing.JPopupMenu popMenu;
    // End of variables declaration//GEN-END:variables
}
