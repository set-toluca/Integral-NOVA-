package Almacen;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Almacen;
import Hibernate.entidades.Ejemplar;
import Hibernate.entidades.Movimiento;
import Hibernate.entidades.Orden;
import Hibernate.entidades.OrdenExterna;
import Hibernate.entidades.Partida;
import Hibernate.entidades.PartidaExterna;
import Hibernate.entidades.Pedido;
import Hibernate.entidades.Usuario;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;
import Integral.FormatoEditor;
import Integral.FormatoTabla;
import Integral.Herramientas;
import Integral.Render1;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
/**
 * @author ESPECIALIZADO TOLUCA
 */
public class muestraAlmacen extends javax.swing.JPanel {
    Usuario usr;
    FormatoTabla formato;
    String sessionPrograma="";
    Herramientas h;
    int menu;
    muestraAlmacen.MyModel model;
    public Orden orden_act=null;
    public Almacen actual=null;
    String miTitulo="Movimientos de Almacén (Entrada de material de proveedor)";
    Class[] types = new Class [] 
    {
        java.lang.String.class,
        java.lang.String.class,
        java.lang.String.class,
        java.lang.String.class,
        java.lang.String.class,
        java.lang.Double.class,
    };
    String[] columnas = new String [] {"N°","#","N° Parte","Descripción","Medida","Cantidad"};
    /**
     * Creates new form nuevAlmacen
     */
    public muestraAlmacen(Usuario usuario, String ses, Almacen ped) {
        initComponents();
        actual=ped;
        usr=usuario;
        sessionPrograma=ses;
        formato = new FormatoTabla(); 
        model=new MyModel(0, columnas, types);
        t_datos.setModel(model);
        t_datos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        formatoTabla();
    }
    public void formatoTabla()
    {
        Color c1 = new java.awt.Color(90,66,126);   
        for(int x=0; x<t_datos.getColumnModel().getColumnCount(); x++)
        {
            t_datos.getColumnModel().getColumn(x).setHeaderRenderer(new Render1(c1));
        }
        tabla_tamaños();
        t_datos.setShowVerticalLines(true);
        t_datos.setShowHorizontalLines(true);
        t_datos.setDefaultRenderer(Double.class, formato); 
        t_datos.setDefaultRenderer(Integer.class, formato);
        t_datos.setDefaultRenderer(String.class, formato);
        t_datos.setDefaultRenderer(Boolean.class, formato);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        l_compania = new javax.swing.JLabel();
        t_compania = new javax.swing.JTextField();
        l_siniestro = new javax.swing.JLabel();
        t_siniestro = new javax.swing.JTextField();
        t_asegurado = new javax.swing.JTextField();
        l_asegurado = new javax.swing.JLabel();
        l_serie = new javax.swing.JLabel();
        t_serie = new javax.swing.JTextField();
        t_modelo = new javax.swing.JTextField();
        l_modelo = new javax.swing.JLabel();
        t_marca = new javax.swing.JTextField();
        l_marca = new javax.swing.JLabel();
        l_tipo = new javax.swing.JLabel();
        t_tipo = new javax.swing.JTextField();
        jPanelMalmacen = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        t_datos = new javax.swing.JTable();
        jPanelM = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_notas = new javax.swing.JTextArea();
        b_recargar = new javax.swing.JButton();
        l_er = new javax.swing.JLabel();
        t_er = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        r1 = new javax.swing.JRadioButton();
        r2 = new javax.swing.JRadioButton();
        t_folio = new javax.swing.JTextField();
        jPanelProveedor1 = new javax.swing.JPanel();
        t_nmovimiento = new javax.swing.JTextField();
        l_fecha = new javax.swing.JLabel();
        t_fecha = new javax.swing.JTextField();
        l_tmovimiento = new javax.swing.JLabel();
        c_tmovimiento = new javax.swing.JComboBox();
        l_toperacion = new javax.swing.JLabel();
        c_toperacion = new javax.swing.JComboBox();
        l_nreferencia = new javax.swing.JLabel();
        t_nreferencia = new javax.swing.JTextField();
        l_pedido = new javax.swing.JLabel();
        t_pedido = new javax.swing.JTextField();
        l_tipo_pedido = new javax.swing.JLabel();
        t_orden = new javax.swing.JTextField();
        l_orden = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jDialog1.setTitle("Datos de la Orden de Taller");

        l_compania.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_compania.setText("Compañía:");

        t_compania.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_compania.setEnabled(false);

        l_siniestro.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_siniestro.setText("Siniestro");

        t_siniestro.setEditable(false);
        t_siniestro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_siniestro.setEnabled(false);

        t_asegurado.setEditable(false);
        t_asegurado.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_asegurado.setEnabled(false);

        l_asegurado.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_asegurado.setText("Asegurado");

        l_serie.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_serie.setText("Serie:");

        t_serie.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_serie.setEnabled(false);

        t_modelo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_modelo.setEnabled(false);

        l_modelo.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_modelo.setText("Mod:");

        t_marca.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_marca.setEnabled(false);

        l_marca.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_marca.setText("Marca:");

        l_tipo.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_tipo.setText("Tipo:");

        t_tipo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_tipo.setEnabled(false);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(l_tipo)
                    .addComponent(l_marca)
                    .addComponent(l_modelo)
                    .addComponent(l_siniestro)
                    .addComponent(l_asegurado)
                    .addComponent(l_compania)
                    .addComponent(l_serie))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t_compania)
                    .addComponent(t_asegurado)
                    .addComponent(t_siniestro)
                    .addComponent(t_serie, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(t_modelo, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(t_marca, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                    .addComponent(t_tipo))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_tipo)
                    .addComponent(t_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_marca)
                    .addComponent(t_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_modelo)
                    .addComponent(t_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_serie)
                    .addComponent(t_serie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_siniestro)
                    .addComponent(t_siniestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_compania)
                    .addComponent(t_compania, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_asegurado)
                    .addComponent(t_asegurado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelMalmacen.setBackground(new java.awt.Color(254, 254, 254));
        jPanelMalmacen.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), miTitulo, javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        t_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "#", "N° Parte", "Descripción", "Medida", "Pedidos", "X Surtir", "Cantidad", "Costo c/u", "Total"
            }
        ));
        t_datos.setEnabled(false);
        t_datos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        t_datos.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(t_datos);
        t_datos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanelM.setBackground(new java.awt.Color(2, 135, 242));

        jScrollPane2.setBackground(new java.awt.Color(2, 135, 242));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Notas", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        t_notas.setColumns(20);
        t_notas.setRows(5);
        t_notas.setEnabled(false);
        jScrollPane2.setViewportView(t_notas);

        b_recargar.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        b_recargar.setText("Imprimir");
        b_recargar.setToolTipText("");
        b_recargar.setEnabled(false);
        b_recargar.setMaximumSize(new java.awt.Dimension(32, 8));
        b_recargar.setMinimumSize(new java.awt.Dimension(32, 8));
        b_recargar.setPreferredSize(new java.awt.Dimension(32, 8));
        b_recargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_recargarActionPerformed(evt);
            }
        });

        l_er.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_er.setForeground(new java.awt.Color(255, 255, 255));
        l_er.setText("Entrego/Recibio:");

        t_er.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_er.setEnabled(false);

        jButton1.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jButton1.setText("Actualizar");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(r1);
        r1.setText("Fact.");
        r1.setEnabled(false);

        buttonGroup1.add(r2);
        r2.setText("Rem.");
        r2.setEnabled(false);

        t_folio.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_folio.setEnabled(false);

        javax.swing.GroupLayout jPanelMLayout = new javax.swing.GroupLayout(jPanelM);
        jPanelM.setLayout(jPanelMLayout);
        jPanelMLayout.setHorizontalGroup(
            jPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMLayout.createSequentialGroup()
                        .addComponent(l_er)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_er))
                    .addGroup(jPanelMLayout.createSequentialGroup()
                        .addComponent(r1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(r2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_folio, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 170, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_recargar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanelMLayout.setVerticalGroup(
            jPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMLayout.createSequentialGroup()
                .addGroup(jPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanelMLayout.createSequentialGroup()
                        .addGroup(jPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelMLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b_recargar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMLayout.createSequentialGroup()
                                .addGroup(jPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(r1)
                                    .addComponent(r2)
                                    .addComponent(t_folio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(t_er, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l_er))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanelProveedor1.setBackground(new java.awt.Color(255, 255, 255));
        jPanelProveedor1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Movimiento", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        t_nmovimiento.setEditable(false);
        t_nmovimiento.setBackground(new java.awt.Color(255, 255, 255));
        t_nmovimiento.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        l_fecha.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_fecha.setText("Fecha:");

        t_fecha.setEditable(false);
        t_fecha.setBackground(new java.awt.Color(255, 255, 255));
        t_fecha.setText("DD/MM/AAAA");
        t_fecha.setToolTipText("fecha para refacciones");
        t_fecha.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        l_tmovimiento.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_tmovimiento.setText("T. Movimiento");

        c_tmovimiento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Entrada", "Salida" }));
        c_tmovimiento.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        c_tmovimiento.setEnabled(false);

        l_toperacion.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_toperacion.setText("Operación");

        c_toperacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pedido", "Compañía", "Operarios", "Venta", "Inventario", "Ajuste" }));
        c_toperacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        c_toperacion.setEnabled(false);

        l_nreferencia.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_nreferencia.setText("Ref");

        t_nreferencia.setEditable(false);
        t_nreferencia.setBackground(new java.awt.Color(255, 255, 255));
        t_nreferencia.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        l_pedido.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_pedido.setText("Pedido");

        t_pedido.setEditable(false);
        t_pedido.setBackground(new java.awt.Color(255, 255, 255));
        t_pedido.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        l_tipo_pedido.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        t_orden.setEditable(false);
        t_orden.setBackground(new java.awt.Color(255, 255, 255));
        t_orden.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        l_orden.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        l_orden.setText("OT:");

        jButton2.setBackground(new java.awt.Color(51, 51, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Movimiento:");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 51, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Ver mas");

        javax.swing.GroupLayout jPanelProveedor1Layout = new javax.swing.GroupLayout(jPanelProveedor1);
        jPanelProveedor1.setLayout(jPanelProveedor1Layout);
        jPanelProveedor1Layout.setHorizontalGroup(
            jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProveedor1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProveedor1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_nmovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelProveedor1Layout.createSequentialGroup()
                        .addComponent(l_orden)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProveedor1Layout.createSequentialGroup()
                        .addComponent(l_fecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_tmovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_tmovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelProveedor1Layout.createSequentialGroup()
                        .addComponent(l_pedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_tipo_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelProveedor1Layout.createSequentialGroup()
                        .addComponent(l_toperacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_toperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelProveedor1Layout.createSequentialGroup()
                        .addComponent(l_nreferencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_nreferencia)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelProveedor1Layout.setVerticalGroup(
            jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProveedor1Layout.createSequentialGroup()
                .addGroup(jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_nmovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_fecha)
                    .addComponent(t_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_tmovimiento)
                    .addComponent(c_toperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_toperacion)
                    .addComponent(c_tmovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_orden)
                        .addComponent(t_orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(l_pedido)
                        .addComponent(t_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(l_tipo_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelProveedor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(l_nreferencia)
                        .addComponent(t_nreferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout jPanelMalmacenLayout = new javax.swing.GroupLayout(jPanelMalmacen);
        jPanelMalmacen.setLayout(jPanelMalmacenLayout);
        jPanelMalmacenLayout.setHorizontalGroup(
            jPanelMalmacenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanelMalmacenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMalmacenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jPanelProveedor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelMalmacenLayout.setVerticalGroup(
            jPanelMalmacenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMalmacenLayout.createSequentialGroup()
                .addComponent(jPanelProveedor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelMalmacen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMalmacen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void b_recargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_recargarActionPerformed
        h= new Herramientas(usr, 0);
        h.session(sessionPrograma);
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            actual=(Almacen)session.get(Almacen.class, actual.getIdAlmacen());
        }catch(Exception e)
        {
            System.out.println(e);
        }
        if(session!=null)
            if(session.isOpen())
                session.close();
        if(actual.getOperacion()==1 || actual.getOperacion()==2  || actual.getOperacion()==3 || actual.getOperacion()==6)
        {
            formatosPedido f1=new formatosPedido(this.usr, this.sessionPrograma, this.actual);
            f1.formato();
        }
        else
        {
            formatosOrden f1=new formatosOrden(this.usr, this.sessionPrograma, this.actual);
            f1.formato();
        }
    }//GEN-LAST:event_b_recargarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(t_nmovimiento.getText().compareToIgnoreCase("")!=0)
        {
            Session session = HibernateUtil.getSessionFactory().openSession();
            try
            {
                actual=(Almacen)session.get(Almacen.class, actual.getIdAlmacen());
                actual.setEntrego(t_er.getText());
                actual.setNotas(t_notas.getText());
                if(r1.isSelected())
                    actual.setTipoDocumento("F");
                else
                    actual.setTipoDocumento("R");
                actual.setDocumento(t_folio.getText());
                session.update(actual);
                session.beginTransaction().commit();
                JOptionPane.showMessageDialog(null, "Registro actualizado");
            }catch(Exception e)
            {
                session.beginTransaction().rollback();
                System.out.println(e);
            }
            if(session!=null)
                if(session.isOpen())
                    session.close();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        buscaAlmacen obj = new buscaAlmacen(new javax.swing.JFrame(), true, this.usr);
        obj.t_busca.requestFocus();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);
        Almacen alm=obj.getReturnStatus();
        if(alm!=null)
        {
            actual=alm;
            busca();
            t_notas.setEnabled(true);
            jButton1.setEnabled(true);
            b_recargar.setEnabled(true);
            r1.setEnabled(true);
            r2.setEnabled(true);
            t_folio.setEnabled(true);
            t_er.setEnabled(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_recargar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox c_tmovimiento;
    private javax.swing.JComboBox c_toperacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JPanel jPanelM;
    private javax.swing.JPanel jPanelMalmacen;
    private javax.swing.JPanel jPanelProveedor1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel l_asegurado;
    private javax.swing.JLabel l_compania;
    private javax.swing.JLabel l_er;
    private javax.swing.JLabel l_fecha;
    private javax.swing.JLabel l_marca;
    private javax.swing.JLabel l_modelo;
    private javax.swing.JLabel l_nreferencia;
    private javax.swing.JLabel l_orden;
    private javax.swing.JLabel l_pedido;
    private javax.swing.JLabel l_serie;
    private javax.swing.JLabel l_siniestro;
    private javax.swing.JLabel l_tipo;
    private javax.swing.JLabel l_tipo_pedido;
    private javax.swing.JLabel l_tmovimiento;
    private javax.swing.JLabel l_toperacion;
    private javax.swing.JRadioButton r1;
    private javax.swing.JRadioButton r2;
    private javax.swing.JTextField t_asegurado;
    private javax.swing.JTextField t_compania;
    private javax.swing.JTable t_datos;
    private javax.swing.JTextField t_er;
    private javax.swing.JTextField t_fecha;
    private javax.swing.JTextField t_folio;
    private javax.swing.JTextField t_marca;
    private javax.swing.JTextField t_modelo;
    private javax.swing.JTextField t_nmovimiento;
    private javax.swing.JTextArea t_notas;
    private javax.swing.JTextField t_nreferencia;
    private javax.swing.JTextField t_orden;
    private javax.swing.JTextField t_pedido;
    private javax.swing.JTextField t_serie;
    private javax.swing.JTextField t_siniestro;
    private javax.swing.JTextField t_tipo;
    // End of variables declaration//GEN-END:variables

    public void busca()
    {
        h= new Herramientas(usr, menu);
        h.session(sessionPrograma);
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction().begin();
            borra_cajas();
            actual = (Almacen)session.get(Almacen.class, actual.getIdAlmacen());
            if(actual.getTipoDocumento()!=null)
            {
                r1.setVisible(true);
                r2.setVisible(true);
                t_folio.setVisible(true);
                if(actual.getTipoDocumento().compareTo("F")==0)
                    r1.setSelected(true);
                else
                    r2.setSelected(true);
            }
            else
            {
                r1.setVisible(false);
                r2.setVisible(false);
                t_folio.setVisible(false);
            }
            
            t_nmovimiento.setText(""+actual.getIdAlmacen());
            
            t_fecha.setText(""+actual.getFecha().toString());
            
            if(actual.getTipoMovimiento()==1)
                c_tmovimiento.setSelectedItem("Entrada");
            else
                c_tmovimiento.setSelectedItem("Salida");
            
            switch(actual.getOperacion())
            {
                case 1:
                    c_toperacion.setSelectedItem("Pedido");
                    l_tipo_pedido.setText("Valuacion");
                    break;
                case 2:
                    c_toperacion.setSelectedItem("Pedido");
                    l_tipo_pedido.setText("Externo");
                    break;
                case 3:
                    c_toperacion.setSelectedItem("Pedido");
                    l_tipo_pedido.setText("Directo");
                    break;
                case 4:
                    c_toperacion.setSelectedItem("Compañía");
                    l_tipo_pedido.setText("");
                    break;
                case 5:
                    c_toperacion.setSelectedItem("Operarios");
                    l_tipo_pedido.setText("");
                    break;
                case 6:
                    c_toperacion.setSelectedItem("Venta");
                    l_tipo_pedido.setText("");
                    break;
                case 7:
                    c_toperacion.setSelectedItem("Pedido");
                    l_tipo_pedido.setText("Inventario");
                    break;
                case 8:
                    c_toperacion.setSelectedItem("Inventario");
                    l_tipo_pedido.setText("");
                    break;
                case 9:
                    c_toperacion.setSelectedItem("Ajuste");
                    l_tipo_pedido.setText("");
                    break;
            }
            if(actual.getPedido()!=null)
            {
                t_pedido.setText(""+actual.getPedido().getIdPedido());
                if(actual.getPedido().getNoRerefencia()!=null)
                    t_nreferencia.setText(""+actual.getPedido().getNoRerefencia());
            }
            else
            {
                t_pedido.setText("");
                t_nreferencia.setText("");
            }
            if(actual.getDocumento()!=null)
                t_folio.setText(actual.getDocumento());
            else
                t_folio.setText("");
            
            t_er.setText(actual.getEntrego());
            
            if(actual.getNotas()!=null)
                t_notas.setText(actual.getNotas());
            else
                t_notas.setText("");
            
            
            //**********************cargamos datos de la orden***********************
            //borra_cajas();
            Movimiento[] mov;
            if(actual.getPedido()!=null)
            {
                Pedido ped=(Pedido)session.get(Pedido.class, actual.getPedido().getIdPedido());
                switch(ped.getTipoPedido())
                {
                    case "Valuacion":
                        Partida partida = (Partida)session.createCriteria(Partida.class).add(Restrictions.eq("pedido.idPedido", ped.getIdPedido())).setMaxResults(1).uniqueResult();
                        if(partida!=null)
                        {
                            orden_act=(Orden)session.get(Orden.class, partida.getOrdenByIdOrden().getIdOrden());
                            //borra_cajas();
                            l_tipo_pedido.setText(ped.getTipoPedido());
                            t_pedido.setText(""+ped.getIdPedido());
                            t_orden.setText(""+orden_act.getIdOrden());
                            t_tipo.setText(orden_act.getTipo().getTipoNombre());
                            t_marca.setText(""+orden_act.getMarca().getIdMarca());//marcanombre
                            t_modelo.setText(Integer.toString(orden_act.getModelo()));
                            t_serie.setText(orden_act.getNoSerie());
                            t_compania.setText(""+orden_act.getCompania().getIdCompania());//nombre
                            t_siniestro.setText(orden_act.getSiniestro());
                            t_asegurado.setText(""+orden_act.getClientes().getIdClientes());//nombre
                        }
                        break;
                    case "Externo":
                            OrdenExterna orden_Ex=(OrdenExterna)session.get(OrdenExterna.class, ped.getOrdenExterna().getIdOrden());
                            //borra_cajas();
                            l_tipo_pedido.setText(ped.getTipoPedido());
                            t_pedido.setText(""+ped.getIdPedido());
                            //t_orden.setText(""+orden_Ex.getIdOrden());
                            if(orden_Ex.getTipo()!=null)
                                t_tipo.setText(orden_Ex.getTipo().getTipoNombre());
                            if(orden_Ex.getMarca()!=null)
                                t_marca.setText(""+orden_Ex.getMarca().getIdMarca());//marcanombre
                            if(orden_Ex.getModelo()!=null)
                                t_modelo.setText(Integer.toString(orden_Ex.getModelo()));
                            if(orden_Ex.getNoSerie()!=null)
                                t_serie.setText(orden_Ex.getNoSerie());
                            if(orden_Ex.getCompania()!=null)
                                t_compania.setText(""+orden_Ex.getCompania().getIdCompania());//nombre
                            if(orden_Ex.getSiniestro()!=null)
                                t_siniestro.setText(orden_Ex.getSiniestro());
                        break;
                    case "Directo":
                            orden_act=(Orden)session.get(Orden.class, ped.getOrden().getIdOrden());
                            //borra_cajas();
                            l_tipo_pedido.setText(ped.getTipoPedido());
                            t_pedido.setText(""+ped.getIdPedido());
                            t_orden.setText(""+orden_act.getIdOrden());
                            t_tipo.setText(orden_act.getTipo().getTipoNombre());
                            t_marca.setText(""+orden_act.getMarca().getIdMarca());//marcanombre
                            t_modelo.setText(Integer.toString(orden_act.getModelo()));
                            t_serie.setText(orden_act.getNoSerie());
                            t_compania.setText(""+orden_act.getCompania().getIdCompania());//nombre
                            t_siniestro.setText(orden_act.getSiniestro());
                            t_asegurado.setText(""+orden_act.getClientes().getIdClientes());//nombre
                        break;
                    case "Inventario":
                            //orden_act=(Orden)session.get(Orden.class, ped.getOrden().getIdOrden());
                            //borra_cajas();
                            l_tipo_pedido.setText(ped.getTipoPedido());
                            t_pedido.setText(""+ped.getIdPedido());
                            t_orden.setText("");
                            t_tipo.setText("");
                            t_marca.setText("");//marcanombre
                            t_modelo.setText("");
                            t_serie.setText("");
                            t_compania.setText("");//nombre
                            t_siniestro.setText("");
                            t_asegurado.setText("");//nombre
                        break;
                }
            }
            else
            {
                mov=(Movimiento[])actual.getMovimientos().toArray(new Movimiento[0]);
                if(mov.length>0)
                {
                    if(mov[0].getPartida()!=null)
                    {
                        orden_act=mov[0].getPartida().getOrdenByIdOrden();
                        //borra_cajas();
                        t_orden.setText(""+orden_act.getIdOrden());
                        t_tipo.setText(orden_act.getTipo().getTipoNombre());
                        t_marca.setText(""+orden_act.getMarca().getIdMarca());//marcanombre
                        t_modelo.setText(Integer.toString(orden_act.getModelo()));
                        t_serie.setText(orden_act.getNoSerie());
                        t_compania.setText(""+orden_act.getCompania().getIdCompania());//nombre
                        t_siniestro.setText(orden_act.getSiniestro());
                        t_asegurado.setText(""+orden_act.getClientes().getIdClientes());//nombre
                    }
                    else
                    {
                        try
                        {
                            if(mov[0].getPartidaExterna()!=null)
                            {
                                orden_act=mov[0].getPartidaExterna().getPedido().getOrden();
                                //borra_cajas();
                                t_orden.setText(""+orden_act.getIdOrden());
                                t_tipo.setText(orden_act.getTipo().getTipoNombre());
                                t_marca.setText(""+orden_act.getMarca().getIdMarca());//marcanombre
                                t_modelo.setText(Integer.toString(orden_act.getModelo()));
                                t_serie.setText(orden_act.getNoSerie());
                                t_compania.setText(""+orden_act.getCompania().getIdCompania());//nombre
                                t_siniestro.setText(orden_act.getSiniestro());
                                t_asegurado.setText(""+orden_act.getClientes().getIdClientes());//nombre
                            }
                            else
                            {
                                orden_act=actual.getOrden();
                                if(orden_act!=null)
                                {
                                    t_orden.setText(""+orden_act.getIdOrden());
                                    t_tipo.setText(orden_act.getTipo().getTipoNombre());
                                    t_marca.setText(""+orden_act.getMarca().getIdMarca());//marcanombre
                                    t_modelo.setText(Integer.toString(orden_act.getModelo()));
                                    t_serie.setText(orden_act.getNoSerie());
                                    t_compania.setText(""+orden_act.getCompania().getIdCompania());//nombre
                                    t_siniestro.setText(orden_act.getSiniestro());
                                    t_asegurado.setText(""+orden_act.getClientes().getIdClientes());//nombre
                                }
                                else
                                {
                                    //borra_cajas();
                                    t_orden.setText("");
                                    t_tipo.setText("");
                                    t_marca.setText("");//marcanombre
                                    t_modelo.setText("");
                                    t_serie.setText("");
                                    t_compania.setText("");//nombre
                                    t_siniestro.setText("");
                                    t_asegurado.setText("");//nombre
                                }
                            }
                        }catch(Exception e){}
                    }
                }
            }
            //***********************************************************************
            //String[] columnas = new String [] {"N°","#","N° Parte","Descripción","Medida","Cantidad"};
            mov=(Movimiento[])actual.getMovimientos().toArray(new Movimiento[0]);
            model=new MyModel(mov.length, columnas, types);
            t_datos.setModel(model);
            for(int r=0; r<mov.length; r++)
            {
                if(mov[r].getPartida()!=null)
                {
                    Partida par=(Partida)session.get(Partida.class, mov[r].getPartida().getIdPartida());
                    model.setValueAt(par.getIdEvaluacion(), r, 0);
                    model.setValueAt(par.getSubPartida(), r, 1);
                    if(par.getEjemplar()!=null)
                        model.setValueAt(par.getEjemplar().getIdParte(), r, 2);
                    else
                        model.setValueAt("", r, 2);
                    model.setValueAt(par.getCatalogo().getNombre(), r, 3);
                    model.setValueAt(par.getMed(), r, 4);
                    model.setValueAt(mov[r].getCantidad(), r, 5);
                }
                else
                {
                    if(mov[r].getPartidaExterna()!=null)
                    {
                        PartidaExterna par=(PartidaExterna)session.get(PartidaExterna.class, mov[r].getPartidaExterna().getIdPartidaExterna());
                        if(par.getPedido()!=null)
                        {
                            if(par.getPedido().getPartida()!=null)
                            {
                                model.setValueAt(""+par.getPedido().getPartida().getIdEvaluacion(), r, 0);
                                model.setValueAt(""+par.getPedido().getPartida().getSubPartida(), r, 1);
                                if(par.getNoParte()!=null)
                                    model.setValueAt(par.getNoParte(), r, 2);
                                else
                                    model.setValueAt("", r, 2);
                                model.setValueAt(par.getPedido().getPartida().getCatalogo().getNombre()+"/"+par.getDescripcion(), r, 3);
                                model.setValueAt(par.getUnidad(), r, 4);
                                model.setValueAt(par.getCantidad(), r, 5);
                            }
                            else
                            {
                                model.setValueAt("", r, 0);
                                model.setValueAt("", r, 1);
                                if(par.getNoParte()!=null)
                                    model.setValueAt(par.getNoParte(), r, 2);
                                else
                                    model.setValueAt("", r, 2);
                                model.setValueAt(par.getDescripcion(), r, 3);
                                model.setValueAt(par.getUnidad(), r, 4);
                                model.setValueAt(par.getCantidad(), r, 5);
                            }
                        }
                        else
                        {
                            model.setValueAt("", r, 0);
                            model.setValueAt("", r, 1);
                            if(par.getNoParte()!=null)
                                model.setValueAt(par.getNoParte(), r, 2);
                            else
                                model.setValueAt("", r, 2);
                            model.setValueAt(par.getDescripcion(), r, 3);
                            model.setValueAt(par.getUnidad(), r, 4);
                            model.setValueAt(par.getCantidad(), r, 5);
                        }
                    }
                    else
                    {
                        if(mov[r].getEjemplar()!=null)
                        {
                            Ejemplar eje=(Ejemplar)session.get(Ejemplar.class, mov[r].getEjemplar().getIdParte());
                            model.setValueAt("", r, 0);
                            model.setValueAt("", r, 1);
                            model.setValueAt(eje.getIdParte(), r, 2);
                            model.setValueAt(eje.getCatalogo(), r, 3);
                            model.setValueAt(eje.getMedida(), r, 4);
                            model.setValueAt(mov[r].getCantidad(), r, 5);
                        }
                    }
                }
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
        if(session!=null)
            if(session.isOpen())
                session.close();
        formatoTabla();
        titulos();
    }
    
    public class MyModel extends DefaultTableModel
    {        
        Class [] types;
        int ren=0;
        int col=0;
        private List celdaEditable;
        
        public MyModel(int renglones, String columnas[], Class[] tipos)
        {
            types=tipos;
            ren=renglones;
            col=columnas.length;
            celdaEditable=new ArrayList();
            for(int x=0; x<renglones; x++)
            {
                List aux=new ArrayList();
                for(int y=0; y<types.length; y++)
                    aux.add(false);
                celdaEditable.add(aux);
            }
            setDataVector(new Object [renglones][columnas.length], columnas);
        }
        @Override
        public int getRowCount() {
            return ren;
        }
        @Override
        public int getColumnCount() {
            return col;
        }
        @Override
        public void setValueAt(Object value, int row, int col)
        {
            Vector vector = (Vector)dataVector.elementAt(row);
            Object celda = ((Vector)dataVector.elementAt(row)).elementAt(col);
            switch(col)
            {
                default:
                    vector.setElementAt(value, col);
                    dataVector.setElementAt(vector, row);
                    fireTableCellUpdated(row, col);
                    break;
            }
        }
        public Class getColumnClass(int columnIndex) 
        {
            return types [columnIndex];
        }
        public boolean isCellEditable(int rowIndex, int columnIndex) 
        {
            List aux=(List)celdaEditable.get(rowIndex);
            return (boolean)aux.get(columnIndex);
        }
        @Override
        public void removeRow(int row) 
        {
            dataVector.remove(row);
            celdaEditable.remove(row);
            fireTableRowsDeleted(row, row);
            ren=ren-1;
        }
        @Override 
        public void addRow(Object[] vec) 
        {
            insertRow(getRowCount(), vec);
        }
        @Override
        public void insertRow(int row, Object[] rowData) {
            Vector vector=new Vector();
            for(int x=0; x<rowData.length; x++)
                vector.add(rowData[x]);
            dataVector.insertElementAt(vector, row);
            List aux=new ArrayList();
            for(int x=0; x<rowData.length; x++)
                aux.add(false);
            celdaEditable.add(ren, aux);
            fireTableRowsInserted(row, row);
            ren=ren+1;
        }
        public void setCeldaEditable(int fila, int columna,  boolean editable)
        {
            List aux=(List)celdaEditable.get(fila);
            aux.set(columna, editable);
        }
        public void setColumnaEditable(int columna, boolean editable)
        {
            for(int i=0; i<celdaEditable.size(); i++)
            {
                List aux=(List)celdaEditable.get(i);
                aux.set(columna, editable);
            }
        }        
    }
    
    private void tabla_tamaños()
    {
        TableColumnModel col_model = t_datos.getColumnModel();
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT);
        FormatoEditor fe=new FormatoEditor();
        t_datos.setDefaultEditor(Double.class, fe);
        for (int i=0; i<t_datos.getColumnCount(); i++)
        {
            TableColumn column = col_model.getColumn(i);
            switch(i)
            {
                case 0:
                    column.setPreferredWidth(10);
                    break;
                case 1:
                    column.setPreferredWidth(10);
                    break;
                case 2:
                    column.setPreferredWidth(100);
                    break;
                case 3:
                    column.setPreferredWidth(350);
                    break;
                case 4:               
                    column.setPreferredWidth(20);
                    break;
                case 5:               
                    column.setPreferredWidth(10);
                    break;
                case 6:               
                    column.setPreferredWidth(20);
                    break;
                case 7:               
                    column.setPreferredWidth(20);
                    break;
                case 8:               
                    column.setPreferredWidth(20);
                    break;
                default:
                    column.setPreferredWidth(40);
                    break; 
            }
        }
        JTableHeader header = t_datos.getTableHeader();
        header.setBackground(new java.awt.Color(90,66,126));
        header.setForeground(Color.white);
    }        
 
    
    public void titulos()
    {
        if(c_tmovimiento.getSelectedItem().toString().compareTo("Entrada")==0)
        {
            if(c_toperacion.getSelectedItem().toString().compareTo("Pedido")==0 || c_toperacion.getSelectedItem().toString().compareTo("Pedido Externo")==0 || c_toperacion.getSelectedItem().toString().compareTo("Compañía")==0)
                miTitulo="Movimientos de Almacén (Entrada de material de proveedor)";
            if(c_toperacion.getSelectedItem().toString().compareTo("Operarios")==0)
                miTitulo="Movimientos de Almacén (Devolución de material de operarios)";
            if(c_toperacion.getSelectedItem().toString().compareTo("Venta")==0)
                miTitulo="Movimientos de Almacén (Devolución de ventas)";
        }
        else
        {
            if(c_toperacion.getSelectedItem().toString().compareTo("Pedido")==0 || c_toperacion.getSelectedItem().toString().compareTo("Pedido Externo")==0 || c_toperacion.getSelectedItem().toString().compareTo("Compañía")==0)
                miTitulo="Movimientos de Almacén (Devolución de material a proveedor)";
            if(c_toperacion.getSelectedItem().toString().compareTo("Operarios")==0)
                miTitulo="Movimientos de Almacén (Entrega de material a operarios)";
            if(c_toperacion.getSelectedItem().toString().compareTo("Venta")==0)
                miTitulo="Movimientos de Almacén (Entrega de ventas)";
        }
        jPanelMalmacen.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), miTitulo, javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
    }
    
    private void borra_cajas()
    {
        if (c_tmovimiento.getSelectedItem().toString().compareTo("Entrada")==0)
            l_er.setText("Entrego");
        else
            l_er.setText("Recibio");
        //t_er.setText("");
        //t_notas.setText("");
        t_fecha.setText("DD/MM/AAAA");
        t_tipo.setText("");
        t_marca.setText("");
        t_modelo.setText("");
        t_serie.setText("");
        t_compania.setText("");
        t_siniestro.setText("");
        t_asegurado.setText("");
        t_orden.setText("");
        //t_pedido.setText("");
        //t_nmovimiento.setText("");
        //t_folio.setText("");
        //t_nreferencia.setText("");
        this.l_tipo_pedido.setText("");
    }
}