
package Herramientas;

import Integral.Herramientas;
import Integral.ExtensionFileFilter;
import Integral.Imagen;
import Hibernate.Util.HibernateUtil;
import java.util.List;
import javax.swing.InputMap;
import Hibernate.entidades.Herramienta;
import Hibernate.entidades.Usuario;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;

public class altaHerramienta extends javax.swing.JDialog {

    public static final Herramienta RET_CANCEL =null;
    InputMap map = new InputMap();
    DefaultTableModel model;
  
    //private Session session;
    Usuario user;
    String sessionPrograma;
    Herramientas h;
    File archivo=null;
    int entro_foto=0;
    int inventario=0;
  
    public altaHerramienta(java.awt.Frame parent, boolean modal, Usuario u, String ses) {        
        super(parent, modal);
        user=u;
        sessionPrograma=ses;
        initComponents();
        t_existencias.setValue(0.00);
        user=u;
    }
    
    private void doClose(Herramienta o) {
        returnStatus = o;
        setVisible(false);
        dispose();
    }
    
    public Herramienta getReturnStatus() {
        return returnStatus;
    }    
    
    private boolean guardaFoto(String no)
    {
        try {        
            if(archivo.exists()==true)
            {
                File folder = new File("herramienta");
                folder.mkdirs();
                folder = new File("herramienta/miniatura");
                folder.mkdirs();
                Random rng=new Random();
                long  dig8 = rng.nextInt(90000000)+10000000;
                File destino = new File("herramienta/"+no);
                File miniatura = new File("herramienta/miniatura/"+no);
                String ruta=archivo.getPath();
                javax.swing.JPanel p=new Imagen(ruta, 385, 250, 0, 0, 385, 250);
                BufferedImage dibujo =new BufferedImage(385, 250, BufferedImage.TYPE_INT_RGB);
                Graphics g = dibujo.getGraphics();
                p.paint(g);
                ImageIO.write((RenderedImage)dibujo, "jpg", miniatura); // Salvar la imagen en el fichero
                BufferedImage dibujoGrande =ImageIO.read(archivo);
                ImageIO.write((RenderedImage)dibujoGrande, "jpg", destino); // Salvar la imagen en el fichero*/
                return true;
            }
            return false;
        } 
        catch (Exception ioe)
        {
            ioe.printStackTrace();
            System.out.println("Error al guardar archivo.");
            return false;
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        l_catalogo = new javax.swing.JLabel();
        l_comentario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_comentario = new javax.swing.JTextArea();
        b_guardar = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        t_nombre = new javax.swing.JTextField();
        p_foto = new javax.swing.JPanel();
        l_modelo1 = new javax.swing.JLabel();
        t_existencias = new javax.swing.JFormattedTextField();
        t_ubicacion = new javax.swing.JTextField();
        l_catalogo1 = new javax.swing.JLabel();
        l_catalogo2 = new javax.swing.JLabel();
        t_codigo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alta de Herramientas");
        setBackground(new java.awt.Color(254, 254, 254));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l_catalogo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_catalogo.setForeground(new java.awt.Color(102, 102, 255));
        l_catalogo.setText("Nombre:");

        l_comentario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_comentario.setText("Comentario");

        t_comentario.setColumns(20);
        t_comentario.setRows(5);
        t_comentario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_comentarioKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(t_comentario);

        b_guardar.setBackground(new java.awt.Color(2, 135, 242));
        b_guardar.setForeground(new java.awt.Color(254, 254, 254));
        b_guardar.setIcon(new ImageIcon("imagenes/guardar.png"));
        b_guardar.setText("Guardar");
        b_guardar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_guardarActionPerformed(evt);
            }
        });

        b_cancelar.setBackground(new java.awt.Color(2, 135, 242));
        b_cancelar.setForeground(new java.awt.Color(254, 254, 254));
        b_cancelar.setIcon(new ImageIcon("imagenes/cancelar.png"));
        b_cancelar.setText("Cancelar");
        b_cancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("Nota: Los campos en azul son obligatorios");

        t_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_nombreKeyTyped(evt);
            }
        });

        p_foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        p_foto.setMinimumSize(new java.awt.Dimension(145, 136));
        p_foto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_fotoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p_fotoLayout = new javax.swing.GroupLayout(p_foto);
        p_foto.setLayout(p_fotoLayout);
        p_fotoLayout.setHorizontalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );
        p_fotoLayout.setVerticalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 134, Short.MAX_VALUE)
        );

        l_modelo1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_modelo1.setForeground(new java.awt.Color(102, 102, 255));
        l_modelo1.setText("Cantidad:");

        t_existencias.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        t_existencias.setValue(0.0);
        t_existencias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_existenciasFocusLost(evt);
            }
        });
        t_existencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_existenciasActionPerformed(evt);
            }
        });
        t_existencias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_existenciasKeyTyped(evt);
            }
        });

        t_ubicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_ubicacionKeyTyped(evt);
            }
        });

        l_catalogo1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_catalogo1.setText("Ubicación:");

        l_catalogo2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_catalogo2.setForeground(new java.awt.Color(102, 102, 255));
        l_catalogo2.setText("Código:");

        t_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_codigoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(l_comentario)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(l_catalogo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(t_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_catalogo)
                                    .addComponent(l_catalogo2))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t_nombre)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(t_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p_foto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(l_modelo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_existencias, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(l_modelo1)
                                    .addComponent(t_existencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(l_catalogo2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_catalogo1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_comentario)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(p_foto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
       
        int opt=JOptionPane.showConfirmDialog(this, "¡Los datos capturados se eliminarán!");
        System.out.println(opt);
        if(opt==0)
        {
            borra_cajas();
        }
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_guardarActionPerformed
        b_cancelar.requestFocus(); 
        h=new Herramientas(user, 0);
        h.session(sessionPrograma);
        if(t_codigo.getText().compareTo("")!=0){
            if(t_nombre.getText().compareTo("")!=0){        
                        Session session = HibernateUtil.getSessionFactory().openSession();
                        try 
                        {
                            session.beginTransaction();
                            boolean nuevo=true;
                            Herramienta hr = (Herramienta)session.createCriteria(Herramienta.class).add(Restrictions.eq("idHerramienta", this.t_codigo.getText())).setMaxResults(1).uniqueResult();
                            if(hr!=null){
                                this.setAlwaysOnTop(false);
                                session.getTransaction().rollback();
                                JOptionPane.showMessageDialog(null, "¡La Herramienta ya existe!");
                                this.setAlwaysOnTop(true);
                            }else{
                                hr=new Herramienta();
                                hr.setIdHerramienta(t_codigo.getText());                                
                                hr.setNombre(t_nombre.getText().toString());
                                hr.setUbicacion(t_ubicacion.getText().toString());
                                hr.setExistencias(Double.parseDouble(t_existencias.getText().toString()));
                                if(entro_foto==1)
                                {
                                    Random rng=new Random();
                                    long  dig8 = rng.nextInt(90000000)+10000000;
                                    String nombreFoto=""+dig8+".jpg";
                                    guardaFoto(nombreFoto);
                                    hr.setImagen(nombreFoto);
                                }else{
                                    hr.setImagen(null);
                                }
                                hr.setComentario(t_comentario.getText().toString());
                                session.save(hr);
                                session.getTransaction().commit();
                                this.setAlwaysOnTop(false);
                                JOptionPane.showMessageDialog(null, "Registro almacenado");
                                this.setAlwaysOnTop(true);
                                borra_cajas();
                            }
                        }catch (HibernateException he) 
                        {
                            he.printStackTrace();
                            session.getTransaction().rollback();
                            this.setAlwaysOnTop(false);
                            JOptionPane.showMessageDialog(null, "Error al guardar");
                            this.setAlwaysOnTop(true);
                        }
                        finally 
                        {
                            session.close(); 
                        }
            }else{
                this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null, "¡Debe introducir un Nombre!");
                this.setAlwaysOnTop(true);
            }
        }else{
            this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null, "¡Debe introducir un Código!");
                this.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_b_guardarActionPerformed

    private void t_comentarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_comentarioKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_comentario.getText().length()>=100)
            evt.consume();
    }//GEN-LAST:event_t_comentarioKeyTyped

    private void t_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_nombreKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_nombre.getText().length()>=99)
            evt.consume();
    }//GEN-LAST:event_t_nombreKeyTyped

    private void p_fotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_fotoMouseClicked
        // TODO add your handling code here:
        if(t_nombre.isEnabled()==true)
        {
            JFileChooser selector=new JFileChooser();
            selector.setFileFilter(new ExtensionFileFilter("JPG and JPEG", new String[] { "JPG", "JPEG" }));
            int estado=1;
            estado=selector.showOpenDialog(null);
            if(estado==0)
            {
                archivo=selector.getSelectedFile();
                try
                {
                    if(archivo.exists())
                    {
                        String ruta=archivo.getPath();
                        p_foto.removeAll();
                        p_foto.add(new Imagen(ruta, 144, 135, 1, 1, 144, 135));
                        p_foto.repaint();
                        entro_foto=1;
                    }
                    else
                    javax.swing.JOptionPane.showMessageDialog(null, "No se pudo cargar la imagen");
                }catch(Exception e){}
            }
        }
    }//GEN-LAST:event_p_fotoMouseClicked

    private void t_ubicacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_ubicacionKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_ubicacion.getText().length()>=49)
            evt.consume();
    }//GEN-LAST:event_t_ubicacionKeyTyped

    private void t_existenciasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_existenciasKeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if(((caracter < '0') || (caracter > '9')) && (caracter != KeyEvent.VK_BACK_SPACE) && (caracter !='.')){
                evt.consume();
        }
        if(t_existencias.getText().contains(".")==true && caracter =='.')
            evt.consume();
    }//GEN-LAST:event_t_existenciasKeyTyped

    private void t_existenciasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_existenciasFocusLost
        // TODO add your handling code here:
        double ajuste=Double.parseDouble(t_existencias.getText());
        t_existencias.setText(String.valueOf(ajuste));
    }//GEN-LAST:event_t_existenciasFocusLost

    private void t_existenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_existenciasActionPerformed
        // TODO add your handling code here:
        this.t_existenciasFocusLost(null);
    }//GEN-LAST:event_t_existenciasActionPerformed

    private void t_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_codigoKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_ubicacion.getText().length()>=10)
            evt.consume();
    }//GEN-LAST:event_t_codigoKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_catalogo;
    private javax.swing.JLabel l_catalogo1;
    private javax.swing.JLabel l_catalogo2;
    private javax.swing.JLabel l_comentario;
    private javax.swing.JLabel l_modelo1;
    private javax.swing.JPanel p_foto;
    public javax.swing.JTextField t_codigo;
    public javax.swing.JTextArea t_comentario;
    private javax.swing.JFormattedTextField t_existencias;
    public javax.swing.JTextField t_nombre;
    public javax.swing.JTextField t_ubicacion;
    // End of variables declaration//GEN-END:variables

    private List<Object[]> executeHQLQuery(String hql) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            session.getTransaction().commit();
            session.disconnect();
            return resultList;
        } catch (HibernateException he) {
            he.printStackTrace();
            List lista= null;
            return lista;
        }
    }

    private void borra_cajas()
    {
        t_codigo.setText("");
        t_nombre.setText("");
        t_ubicacion.setText("");
        t_comentario.setText("");
        this.t_existencias.setValue(0.00);
        entro_foto=0;
        archivo=null;
        p_foto.removeAll();
        p_foto.repaint();
    }
    
    private Herramienta returnStatus = RET_CANCEL;
}