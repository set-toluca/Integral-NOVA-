/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Conceptos;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Conceptos;
import Hibernate.entidades.Usuario;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import Integral.Herramientas;
/**
 *
 * @author ESPECIALIZADO TOLUCA
 */
public class altaConceptos extends javax.swing.JDialog {
    
    public static final Conceptos RET_CANCEL =null;
    InputMap map = new InputMap();
    DefaultTableModel model;
    Usuario user;
    String sessionPrograma;
    Herramientas h;
    private Conceptos returnStatus;
    
    /** Creates new form acceso */
    public altaConceptos(java.awt.Frame parent, boolean modal, Usuario u, String ses) {
        super(parent, modal);
        user=u;
        sessionPrograma=ses;
        initComponents();
        c_vehiculo.setSelectedIndex(-1);
        c_vehiculo.addItemListener(new java.awt.event.ItemListener() {
            @Override
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                metodo();
            }
        });
        t_nombre.requestFocus();
    }
    
    private void doClose(Conceptos o) {
        returnStatus = o;
        setVisible(false);
        dispose();
    }
    
    public Conceptos getReturnStatus() {
        return returnStatus;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        t_nombre = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        c_vehiculo = new javax.swing.JComboBox();
        b_cancelar = new javax.swing.JButton();
        b_guardar = new javax.swing.JButton();
        l_vehiculo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alta de conceptos");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(110, 147, 214));
        jLabel8.setText("Nombre");

        t_nombre.setNextFocusableComponent(c_vehiculo);
        t_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_nombreActionPerformed(evt);
            }
        });
        t_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_nombreKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(110, 147, 214));
        jLabel14.setText("Vehículo");

        c_vehiculo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2" }));
        c_vehiculo.setName(""); // NOI18N
        c_vehiculo.setNextFocusableComponent(b_guardar);
        c_vehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_vehiculoActionPerformed(evt);
            }
        });

        b_cancelar.setBackground(new java.awt.Color(2, 135, 242));
        b_cancelar.setForeground(new java.awt.Color(254, 254, 254));
        b_cancelar.setIcon(new ImageIcon("imagenes/cancelar.png"));
        b_cancelar.setText("Cancelar");
        b_cancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_cancelar.setNextFocusableComponent(t_nombre);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        b_guardar.setBackground(new java.awt.Color(2, 135, 242));
        b_guardar.setForeground(new java.awt.Color(254, 254, 254));
        b_guardar.setIcon(new ImageIcon("imagenes/guardar.png"));
        b_guardar.setText("Guardar");
        b_guardar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_guardar.setNextFocusableComponent(b_cancelar);
        b_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_guardarActionPerformed(evt);
            }
        });

        l_vehiculo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_vehiculo.setText("Tipo de Vehículo");

        jLabel1.setText("Nota: Los conceptos son utilizados en el inventario de las unidades");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(22, 22, 22)
                        .addComponent(c_vehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(l_vehiculo)
                        .addGap(81, 81, 81)
                        .addComponent(b_cancelar)
                        .addGap(18, 18, 18)
                        .addComponent(b_guardar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(t_nombre)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(c_vehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(l_vehiculo))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_nombreActionPerformed
        this.c_vehiculo.requestFocus();
    }//GEN-LAST:event_t_nombreActionPerformed

    private void t_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_nombreKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_nombre.getText().length()>=45)
            evt.consume();
    }//GEN-LAST:event_t_nombreKeyTyped

    private void c_vehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_vehiculoActionPerformed
        this.b_guardar.requestFocus();
    }//GEN-LAST:event_c_vehiculoActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        t_nombre.requestFocus();
        int opt=JOptionPane.showConfirmDialog(this, "¡Los datos capturados se eliminarán!");
        System.out.println(opt);
        if(opt==0)
            borra_cajas();
        t_nombre.requestFocus();
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_guardarActionPerformed
        b_cancelar.requestFocus();
        h=new Herramientas(user, 0);
        h.session(sessionPrograma); 
        b_cancelar.requestFocus();
        if(t_nombre.getText().compareTo("")!=0)
        {
            if(c_vehiculo.getSelectedIndex()!=-1)
            {
                if(consultaConcepto(t_nombre.getText(), c_vehiculo.getSelectedItem().toString())==false)
                {
                    Conceptos nuevoConcepto = new Conceptos();
                    if(t_nombre.getText().compareTo("")!=0)
                        nuevoConcepto.setNombre(t_nombre.getText());
                    if(c_vehiculo.getSelectedItem().toString().compareTo("")!=0)
                        nuevoConcepto.setVehiculo(Integer.parseInt(c_vehiculo.getSelectedItem().toString()));
                    Integer respuesta=guardarConcepto(nuevoConcepto);
                    if(respuesta==null)
                    {
                        cajas(true);
                        b_guardar.setEnabled(true);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Registro almacenado");
                        this.borra_cajas();
                        t_nombre.requestFocus();
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "¡El nombre del concepto ya existe!");
                    this.borra_cajas();
                    t_nombre.requestFocus();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "¡Debe seleccionar el tipo de vehículo!");
                t_nombre.requestFocus();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "¡Debe introducir el nombre del concepto!");
            t_nombre.requestFocus();
        }
    }//GEN-LAST:event_b_guardarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_guardar;
    public javax.swing.JComboBox c_vehiculo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel l_vehiculo;
    public javax.swing.JTextField t_nombre;
    // End of variables declaration//GEN-END:variables

    private List<Object[]> executeHQLQuery(String hql) 
    {
        try {
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            session.getTransaction().commit();
            session.disconnect();
            return resultList;
        }catch (HibernateException he) {
            he.printStackTrace();
            List lista= null;
            return lista;
        }
    }
    
    private Integer guardarConcepto(Conceptos obj) 
    {
        Session session = HibernateUtil.getSessionFactory().openSession();
        Integer IdClientes = null;
        try 
        {
            session.beginTransaction();
            IdClientes=(Integer) session.save(obj);
            session.save(obj);
            session.getTransaction().commit();
            return null;
        } 
        catch (HibernateException he) 
        {
            he.printStackTrace();
            session.getTransaction().rollback();
            return null;
        }   
        finally
        {
            session.close();
            return IdClientes;
        }
    }
    public boolean consultaConcepto(String nombre, String vehiculo)
    {
        List <Object[]> resultList=executeHQLQuery("from Conceptos obj where obj.nombre='"+nombre+"' and obj.vehiculo="+vehiculo);
        if(resultList.size()>0)
            return true;
        else
            return false;
    }
    
    private void cajas( boolean nombre)
    {
        this.t_nombre.setEnabled(nombre);
    }
    
    private void borra_cajas()
    {
        this.t_nombre.setText("");
    }
    
    private void metodo() 
    {
        int op = c_vehiculo.getSelectedIndex();
        if (op != -1) {
            switch (op) 
            {
                case 0:
                    l_vehiculo.setText("Tracto");
                    break;
                    
                case 1:
                    l_vehiculo.setText("Caja");
                    break;                    
            }      
        }
    }
}
