/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Conceptos;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Conceptos;
import Hibernate.entidades.Usuario;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import Integral.Herramientas;
import Integral.Render1;
/**
 *
 * @author ESPECIALIZADO TOLUCA
 */
public class editaConceptos extends javax.swing.JPanel {
    /**
     * Creates new form editaConceptos
     */
    private Usuario usr;
    private Conceptos actor;
    String sessionPrograma="";
    Herramientas h;
    int[] puestos;
    DefaultTableModel model;
    //Puestos puesto;
     String[] columnas = new String [] {"Clave","Nombre","Vehículo"};
    private Conceptos returnStatus;
    private String orden="";
    
    public editaConceptos(Usuario usuario, String ses) {
        initComponents();
        this.c_filtro.setSelectedIndex(-1);
        sessionPrograma=ses;
        usr=usuario;
        formatoTabla();
        c_vehiculo.setSelectedIndex(-1);
    }
    DefaultTableModel ModeloTablaReporte(int renglones, String columnas[])
    {
        model = new DefaultTableModel(new Object [renglones][3], columnas)
        {
            Class[] types = new Class [] {
                java.lang.Integer.class,
                java.lang.String.class,
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };
            public void setValueAt(Object value, int row, int col)
            {
                Vector vector = (Vector)this.dataVector.elementAt(row);
                Object celda = ((Vector)this.dataVector.elementAt(row)).elementAt(col);
                switch(col)
                {
                    case 0:
                        vector.setElementAt(value, col);
                        this.dataVector.setElementAt(vector, row);
                        fireTableCellUpdated(row, col);
                        break;
                    default:
                        vector.setElementAt(value, col);
                        this.dataVector.setElementAt(vector, row);
                        fireTableCellUpdated(row, col);
                        break;
                }
            }
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];                 
            }
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        return model;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_datos = new javax.swing.JTable();
        bt_actualiza1 = new javax.swing.JButton();
        Selecciona3 = new javax.swing.JButton();
        Eliminar1 = new javax.swing.JButton();
        Selecciona2 = new javax.swing.JButton();
        c_filtro = new javax.swing.JComboBox();
        listado = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        c_vehiculo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        t_nombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        t_numero = new javax.swing.JTextField();
        b_cancelar = new javax.swing.JButton();
        b_actualizar = new javax.swing.JButton();
        l_vehiculo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Edición de Conceptos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Lista", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11))); // NOI18N

        t_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave", "Nombre", "Vehículo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t_datos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        t_datos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(t_datos);
        if (t_datos.getColumnModel().getColumnCount() > 0) {
            t_datos.getColumnModel().getColumn(0).setHeaderValue("Clave");
        }

        bt_actualiza1.setBackground(new java.awt.Color(2, 135, 242));
        bt_actualiza1.setForeground(new java.awt.Color(254, 254, 254));
        bt_actualiza1.setIcon(new ImageIcon("imagenes/tabla.png"));
        bt_actualiza1.setText("Actualizar");
        bt_actualiza1.setToolTipText("Actualizar los datos de la tabla");
        bt_actualiza1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bt_actualiza1.setMaximumSize(new java.awt.Dimension(87, 23));
        bt_actualiza1.setMinimumSize(new java.awt.Dimension(87, 23));
        bt_actualiza1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_actualiza1ActionPerformed(evt);
            }
        });

        Selecciona3.setBackground(new java.awt.Color(2, 135, 242));
        Selecciona3.setForeground(new java.awt.Color(254, 254, 254));
        Selecciona3.setIcon(new ImageIcon("imagenes/update-user.png"));
        Selecciona3.setText("Seleccionar");
        Selecciona3.setToolTipText("Seleccionar un registro de la tabla para editar");
        Selecciona3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Selecciona3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Selecciona3ActionPerformed(evt);
            }
        });

        Eliminar1.setBackground(new java.awt.Color(2, 135, 242));
        Eliminar1.setForeground(new java.awt.Color(254, 254, 254));
        Eliminar1.setIcon(new ImageIcon("imagenes/del-user.png"));
        Eliminar1.setText("Eliminar");
        Eliminar1.setToolTipText("Eliminar el registro actual");
        Eliminar1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Eliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Eliminar1ActionPerformed(evt);
            }
        });

        Selecciona2.setBackground(new java.awt.Color(2, 135, 242));
        Selecciona2.setForeground(new java.awt.Color(254, 254, 254));
        Selecciona2.setIcon(new ImageIcon("imagenes/add-user.png"));
        Selecciona2.setText("Nuevo");
        Selecciona2.setToolTipText("Agregar un registo actual");
        Selecciona2.setFocusable(false);
        Selecciona2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Selecciona2.setMaximumSize(new java.awt.Dimension(87, 23));
        Selecciona2.setMinimumSize(new java.awt.Dimension(87, 23));
        Selecciona2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Selecciona2ActionPerformed(evt);
            }
        });

        c_filtro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tracto", "Caja" }));
        c_filtro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c_filtroItemStateChanged(evt);
            }
        });

        listado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        listado.setText("Listado de inventario");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_actualiza1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Selecciona3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Eliminar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Selecciona2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(c_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(listado)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Selecciona3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_actualiza1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Eliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Selecciona2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBackground(new java.awt.Color(254, 254, 254));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Actualizar", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11))); // NOI18N

        c_vehiculo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2" }));
        c_vehiculo.setToolTipText("");
        c_vehiculo.setEnabled(false);
        c_vehiculo.setNextFocusableComponent(b_actualizar);
        c_vehiculo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                c_vehiculoItemStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(54, 111, 226));
        jLabel9.setText("Vehículo");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(54, 111, 226));
        jLabel2.setText("Nombre");

        t_nombre.setEnabled(false);
        t_nombre.setNextFocusableComponent(c_vehiculo);
        t_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_nombreActionPerformed(evt);
            }
        });
        t_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_nombreKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Clave");

        t_numero.setEditable(false);
        t_numero.setEnabled(false);

        b_cancelar.setBackground(new java.awt.Color(2, 135, 242));
        b_cancelar.setForeground(new java.awt.Color(254, 254, 254));
        b_cancelar.setIcon(new ImageIcon("imagenes/cancelar.png"));
        b_cancelar.setText("Cancelar");
        b_cancelar.setEnabled(false);
        b_cancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_cancelar.setMaximumSize(new java.awt.Dimension(87, 23));
        b_cancelar.setNextFocusableComponent(t_nombre);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        b_actualizar.setBackground(new java.awt.Color(2, 135, 242));
        b_actualizar.setForeground(new java.awt.Color(254, 254, 254));
        b_actualizar.setIcon(new ImageIcon("imagenes/guardar.png"));
        b_actualizar.setText("Actualizar");
        b_actualizar.setEnabled(false);
        b_actualizar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_actualizar.setMaximumSize(new java.awt.Dimension(87, 23));
        b_actualizar.setMinimumSize(new java.awt.Dimension(87, 23));
        b_actualizar.setNextFocusableComponent(b_cancelar);
        b_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_actualizarActionPerformed(evt);
            }
        });

        l_vehiculo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        l_vehiculo.setText("Tipo de Vehículo");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(26, 26, 26)
                        .addComponent(c_vehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(l_vehiculo)
                        .addGap(108, 108, 108))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(t_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(t_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(33, 33, 33))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(86, 86, 86)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(t_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(c_vehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(l_vehiculo))
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void t_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_nombreActionPerformed
        c_vehiculo.requestFocus();
    }//GEN-LAST:event_t_nombreActionPerformed

    private void t_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_nombreKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_nombre.getText().length()>=45)
            evt.consume();
    }//GEN-LAST:event_t_nombreKeyTyped

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        t_nombre.requestFocus();
        int opt=JOptionPane.showConfirmDialog(this, "¡Los datos capturados se eliminarán!");
        System.out.println(opt);
        if(opt==0)
        {
            borra_cajas();
            cajas(false, false, false, false);
        }
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_actualizarActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        if(t_nombre.getText().compareTo("")!=0)
        {
            boolean respuesta=modifica();
            if(respuesta==true)
            {
                JOptionPane.showMessageDialog(null, "Registro modificado");
                this.borra_cajas();
                buscaDato(c_filtro.getSelectedIndex());
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "¡Selecciona el concepto que desees modificar!");
            t_nombre.requestFocus();
        }
    }//GEN-LAST:event_b_actualizarActionPerformed

    private void Selecciona2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Selecciona2ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        altaConceptos obj = new altaConceptos(new javax.swing.JFrame(), true, usr, sessionPrograma);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
        obj.setVisible(true);
        borra_cajas();
        cajas(false, false, false, false);
        buscaDato(c_filtro.getSelectedIndex());
    }//GEN-LAST:event_Selecciona2ActionPerformed

    private void Eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Eliminar1ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        if(this.t_datos.getSelectedRow()>=0)
        {
            DefaultTableModel model = (DefaultTableModel) t_datos.getModel();
            int a = t_datos.getSelectedRow();
            int opt=JOptionPane.showConfirmDialog(this, "¡Los datos capturados se eliminarán!");
            if (JOptionPane.YES_OPTION == opt)
            {
                boolean respuesta=eliminar(t_datos.getValueAt(t_datos.getSelectedRow(), 0).toString());
                if(respuesta==true)
                { 
                    this.cajas(false, false, false, false);
                    this.borra_cajas();
                    JOptionPane.showMessageDialog(null, "¡Registro eliminado!");
                    buscaDato(c_filtro.getSelectedIndex());
                }
            }
            else
            {
                if (JOptionPane.NO_OPTION== opt)
                  JOptionPane.showMessageDialog(null, "¡Selecciona el concepto correcto para eliminar!");  
            }  
        }
         else
         {
             JOptionPane.showMessageDialog(null, "¡Selecciona el concepto que desees eliminar!");
             t_nombre.requestFocus();
         }
    }//GEN-LAST:event_Eliminar1ActionPerformed

    private void Selecciona3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Selecciona3ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        if(t_datos.getSelectedRow()>=0)
        {
            this.borra_cajas();
            t_numero.setText(t_datos.getValueAt(t_datos.getSelectedRow(), 0).toString());
            t_nombre.setText(t_datos.getValueAt(t_datos.getSelectedRow(), 1).toString());
            this.c_vehiculo.setSelectedItem(t_datos.getValueAt(t_datos.getSelectedRow(), 2).toString());
            this.cajas(true, true, true, true);
        }
        else
        JOptionPane.showMessageDialog(null, "¡No hay un concepto seleccionado!");
    }//GEN-LAST:event_Selecciona3ActionPerformed

    private void bt_actualiza1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_actualiza1ActionPerformed
        this.borra_cajas();
        this.cajas(false, false, false, false);
        buscaDato(c_filtro.getSelectedIndex());
    }//GEN-LAST:event_bt_actualiza1ActionPerformed

    private void c_filtroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c_filtroItemStateChanged
        switch (c_filtro.getSelectedIndex())
        {
            case 0:
                listado.setText("Inventario de Tracto");
                buscaDato(0);
                break;
            case 1:
                listado.setText("Inventario de Caja");
                buscaDato(1);
                break;
        }
    }//GEN-LAST:event_c_filtroItemStateChanged

    private void c_vehiculoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_c_vehiculoItemStateChanged
        switch (c_vehiculo.getSelectedIndex())
        {
            case 0:
                l_vehiculo.setText("Inventario de Tracto");
                buscaDato(0);
                break;
            case 1:
                l_vehiculo.setText("Inventario de Caja");
                buscaDato(1);
                break;
        }
    }//GEN-LAST:event_c_vehiculoItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar1;
    private javax.swing.JButton Selecciona2;
    private javax.swing.JButton Selecciona3;
    private javax.swing.JButton b_actualizar;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton bt_actualiza1;
    private javax.swing.JComboBox c_filtro;
    public javax.swing.JComboBox c_vehiculo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_vehiculo;
    private javax.swing.JLabel listado;
    private javax.swing.JTable t_datos;
    public javax.swing.JTextField t_nombre;
    public javax.swing.JTextField t_numero;
    // End of variables declaration//GEN-END:variables
    
    private void buscaDato(int op)
    {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Conceptos[] con=null;
        int valor=0;
        if(op==0)
        {
            Query query = session.createQuery("from Conceptos con where con.vehiculo="+1);
            con = (Conceptos[])query.list().toArray(new Conceptos[0]);
            if((con.length-14)>=0)
            {
                t_datos.setModel(ModeloTablaReporte(con.length-14, columnas));
                valor=14;
            }
            else
                t_datos.setModel(ModeloTablaReporte(0, columnas));
        }
        if(op==1)
        {
            Query query = session.createQuery("from Conceptos con where con.vehiculo="+2);
            con = (Conceptos[])query.list().toArray(new Conceptos[0]);
            if((con.length-9)>=0)
            {
                
                t_datos.setModel(ModeloTablaReporte(con.length-9, columnas));
                valor=9;
            }
            else
                t_datos.setModel(ModeloTablaReporte(0, columnas));
        }
        if(op==-1)
            t_datos.setModel(ModeloTablaReporte(0, columnas));
        formatoTabla();
        if(con!=null)
        {
            System.out.println(valor+"inv="+con.length);
            for(int i=valor; i<con.length; i++)
            {
                model.setValueAt(con[i].getIdConcepto(), i-valor, 0);
                model.setValueAt(con[i].getNombre(), i-valor, 1);
                model.setValueAt(con[i].getVehiculo(),i-valor, 2);
            }
        }
        if(session!=null)
            if(session.isOpen())
                session.close();
    }
    
    private boolean modifica()
    {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction();
            Object resp=session.createQuery("from Conceptos obj where obj.nombre='"+t_nombre.getText()+"' and obj.idConcepto!="+t_numero.getText()).uniqueResult();
            if(resp==null)
            {
                Conceptos objeto = (Conceptos)session.get(Conceptos.class, Integer.parseInt(t_numero.getText()));
                objeto.setNombre(t_nombre.getText());
                if(c_vehiculo.getSelectedItem().toString().compareTo("")!=0)
                    objeto.setVehiculo(Integer.parseInt(c_vehiculo.getSelectedItem().toString()));
                session.update(objeto);
                session.getTransaction().commit();
                cajas(false, false, false, false);
                return true;
            }
            else
            {
                JOptionPane.showMessageDialog(null, "¡No se pueden guardar nombres duplicados!");  
                return false;
            }
        }
        catch (HibernateException he)
        {
            he.printStackTrace(); 
            System.out.println(he.hashCode());
            session.getTransaction().rollback();
            return false;
        }
        finally
        {
            if(session.isOpen())
                session.close();
        }
    }
    private boolean eliminar(String idConcepto)
    {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction();
            actor = (Conceptos)session.get(Conceptos.class, Integer.parseInt(idConcepto));
            /*if(actor.getInventarios().isEmpty()==false)
            {
                session.getTransaction().rollback();
                JOptionPane.showMessageDialog(null, "¡El concepto esta en uso, no se puede eliminar!");
                return false;
            }
            else
            {*/
                session.delete(actor);
                session.getTransaction().commit();
                return true;
            //}
        }catch(Exception e)
        {
            e.printStackTrace();
            session.getTransaction().rollback();
            return false;
        }
        finally
        {
            if(session.isOpen())
                session.close();
        }
    }
    
    public void cajas( boolean nombre, boolean vehiculo, boolean actualizar, boolean cancelar)
    {
        this.t_nombre.setEnabled(nombre);
        this.c_vehiculo.setEnabled(vehiculo);
        this.b_actualizar.setEnabled(actualizar);
        this.b_cancelar.setEnabled(cancelar);
    }
    
    public void borra_cajas()
    {
        this.t_numero.setText("");
        this.t_nombre.setText("");
        this.c_vehiculo.setSelectedItem(null);
    }
    public void tabla_tamaños()
    {
        TableColumnModel col_model = t_datos.getColumnModel();
        for (int i=0; i<t_datos.getColumnCount(); i++)
        {
  	      TableColumn column = col_model.getColumn(i);
              switch(i)
              {
                  case 0:
                      column.setPreferredWidth(10);
                      break;
                  case 1:
                      column.setPreferredWidth(150);
                      break;
                  case 2:
                      column.setPreferredWidth(10);
                      break;
                  default:
                      column.setPreferredWidth(40);
                      break;    
              }
        }
        JTableHeader header = t_datos.getTableHeader();
        header.setForeground(Color.white);
    }
    
    public void formatoTabla()
    {
        Color c1 = new java.awt.Color(2, 135, 242);
        for(int x=0; x<t_datos.getColumnModel().getColumnCount(); x++)
            t_datos.getColumnModel().getColumn(x).setHeaderRenderer(new Render1(c1));
        tabla_tamaños();
        t_datos.setShowVerticalLines(true);
        t_datos.setShowHorizontalLines(true);
    }
}