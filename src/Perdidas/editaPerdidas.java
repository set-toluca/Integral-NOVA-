/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Perdidas;

import Hibernate.Util.HibernateUtil;
import Hibernate.entidades.Partida;
import Hibernate.entidades.Perdidas;
import Hibernate.entidades.Usuario;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;
import Integral.Herramientas;
import Integral.Render1;
/**
 *
 * @author salvador
 */
public class editaPerdidas extends javax.swing.JPanel {

    DefaultTableModel model;
    String[] columnas = new String [] {"id", "Descripci칩n", "Pasillo", "Rack", "Nivel", "Fecha E.","Estado"}; 
    Usuario usr;
    private Session session;
    String sessionPrograma="";
    Herramientas h;
    int menu;
    /**
     * Creates new form editaPerdidas
     */
    public editaPerdidas(Usuario usuario, String programa, int menu) {
        initComponents();
        this.menu=menu;
        usr=usuario;
        sessionPrograma=programa;
        buscaDato();
    }

    DefaultTableModel ModeloTablaReporte(int renglones, String columnas[])
    {
        model = new DefaultTableModel(new Object [renglones][3], columnas)
        {
            Class[] types = new Class [] {
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class, 
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };
            
            public void setValueAt(Object value, int row, int col)
            {
                Vector vector = (Vector)this.dataVector.elementAt(row);
                Object celda = ((Vector)this.dataVector.elementAt(row)).elementAt(col);
                switch(col)
                {
                    default:
                        vector.setElementAt(value, col);
                        this.dataVector.setElementAt(vector, row);
                        fireTableCellUpdated(row, col);
                        break;
                }
            }
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];                 
            }
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        return model;
    }
    
    public void tabla_tama침os()
    {
        TableColumnModel col_model = t_datos.getColumnModel();
        for (int i=0; i<t_datos.getColumnCount(); i++)
        {
  	      TableColumn column = col_model.getColumn(i);
              switch(i)
              {
                  case 0:
                      column.setPreferredWidth(20);
                      break;
                  case 1:
                      column.setPreferredWidth(150);
                      break;
                  case 5:
                      column.setPreferredWidth(100);
                      break;
                  case 6:
                      column.setPreferredWidth(100);
                      break;
                  default:
                      column.setPreferredWidth(40);
                      break;
              }
        }
        JTableHeader header = t_datos.getTableHeader();
        header.setForeground(Color.white);
    }
    public void formatoTabla()
    {
        Color c1 = new java.awt.Color(2, 135, 242);
        for(int x=0; x<t_datos.getColumnModel().getColumnCount(); x++)
            t_datos.getColumnModel().getColumn(x).setHeaderRenderer(new Render1(c1));
        tabla_tama침os();
        t_datos.setShowVerticalLines(true);
        t_datos.setShowHorizontalLines(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_datos = new javax.swing.JTable();
        Selecciona2 = new javax.swing.JButton();
        Eliminar1 = new javax.swing.JButton();
        Selecciona3 = new javax.swing.JButton();
        bt_actualiza1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        t_modifico = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        t_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_descripcion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        c_pasillo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        c_rack = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        c_nivel = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        t_orden = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        t_partida = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        t_sub_partida = new javax.swing.JTextField();
        b_busca_orden = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        c_estado = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        t_recibio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        t_entrada = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        t_notas = new javax.swing.JTextArea();
        b_guardar = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();

        setBackground(new java.awt.Color(254, 254, 254));
        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Muestras", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Lista", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11))); // NOI18N

        t_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Descripci칩n", "Pasillo", "Rack", "Nivel", "Fecha E.", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t_datos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        t_datos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(t_datos);

        Selecciona2.setBackground(new java.awt.Color(2, 135, 242));
        Selecciona2.setForeground(new java.awt.Color(254, 254, 254));
        Selecciona2.setIcon(new ImageIcon("imagenes/add-user.png"));
        Selecciona2.setText("Nuevo");
        Selecciona2.setToolTipText("Agregar un registo actual");
        Selecciona2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Selecciona2.setMaximumSize(new java.awt.Dimension(87, 23));
        Selecciona2.setMinimumSize(new java.awt.Dimension(87, 23));
        Selecciona2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Selecciona2ActionPerformed(evt);
            }
        });

        Eliminar1.setBackground(new java.awt.Color(2, 135, 242));
        Eliminar1.setForeground(new java.awt.Color(254, 254, 254));
        Eliminar1.setIcon(new ImageIcon("imagenes/del-user.png"));
        Eliminar1.setText("Eliminar");
        Eliminar1.setToolTipText("Eliminar el registro actual");
        Eliminar1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Eliminar1.setMaximumSize(new java.awt.Dimension(87, 23));
        Eliminar1.setMinimumSize(new java.awt.Dimension(87, 23));
        Eliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Eliminar1ActionPerformed(evt);
            }
        });

        Selecciona3.setBackground(new java.awt.Color(2, 135, 242));
        Selecciona3.setForeground(new java.awt.Color(254, 254, 254));
        Selecciona3.setIcon(new ImageIcon("imagenes/update-user.png"));
        Selecciona3.setText("Seleccionar");
        Selecciona3.setToolTipText("Seleccionar un registro de la tabla para editar");
        Selecciona3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Selecciona3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Selecciona3ActionPerformed(evt);
            }
        });

        bt_actualiza1.setBackground(new java.awt.Color(2, 135, 242));
        bt_actualiza1.setForeground(new java.awt.Color(254, 254, 254));
        bt_actualiza1.setIcon(new ImageIcon("imagenes/tabla.png"));
        bt_actualiza1.setText("Actualizar");
        bt_actualiza1.setToolTipText("Actualizar los datos de la tabla");
        bt_actualiza1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bt_actualiza1.setMaximumSize(new java.awt.Dimension(87, 23));
        bt_actualiza1.setMinimumSize(new java.awt.Dimension(87, 23));
        bt_actualiza1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_actualiza1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_actualiza1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Selecciona3)
                        .addGap(18, 18, 18)
                        .addComponent(Eliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Selecciona2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Selecciona2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Eliminar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Selecciona3)
                    .addComponent(bt_actualiza1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Editar Entrada", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 11))); // NOI18N

        jLabel8.setText("Modifico:");

        t_modifico.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_modifico.setEnabled(false);

        jLabel1.setText("Id");

        t_id.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_id.setEnabled(false);

        jLabel2.setForeground(new java.awt.Color(150, 102, 244));
        jLabel2.setText("Descripci칩n");

        t_descripcion.setColumns(20);
        t_descripcion.setRows(5);
        t_descripcion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_descripcion.setEnabled(false);
        jScrollPane2.setViewportView(t_descripcion);

        jLabel3.setForeground(new java.awt.Color(150, 102, 244));
        jLabel3.setText("Pasillo:");

        c_pasillo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        c_pasillo.setEnabled(false);

        jLabel4.setForeground(new java.awt.Color(150, 102, 244));
        jLabel4.setText("Rack:");

        c_rack.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        c_rack.setEnabled(false);

        jLabel5.setForeground(new java.awt.Color(150, 102, 244));
        jLabel5.setText("Nivel:");

        c_nivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        c_nivel.setEnabled(false);

        jLabel11.setText("No Orden");

        t_orden.setBackground(new java.awt.Color(204, 255, 255));
        t_orden.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_orden.setEnabled(false);

        jLabel12.setText("Partida");

        t_partida.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_partida.setEnabled(false);

        jLabel13.setText("sub-partida");

        t_sub_partida.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_sub_partida.setEnabled(false);

        b_busca_orden.setBackground(new java.awt.Color(2, 135, 242));
        b_busca_orden.setIcon(new ImageIcon("imagenes/buscar.png"));
        b_busca_orden.setEnabled(false);
        b_busca_orden.setMaximumSize(new java.awt.Dimension(32, 8));
        b_busca_orden.setMinimumSize(new java.awt.Dimension(32, 8));
        b_busca_orden.setPreferredSize(new java.awt.Dimension(32, 8));
        b_busca_orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_busca_ordenActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(150, 102, 244));
        jLabel7.setText("Estado:");

        c_estado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DA칌O TOTAL", "DA칌O PARCIAL", "REPARACI칍N", "ENTREGADO" }));
        c_estado.setEnabled(false);
        c_estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_estadoActionPerformed(evt);
            }
        });

        jLabel9.setText("Recibio:");

        t_recibio.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_recibio.setEnabled(false);

        jLabel6.setText("Entrada:");

        t_entrada.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_entrada.setEnabled(false);

        jLabel14.setText("Notas:");

        t_notas.setColumns(20);
        t_notas.setRows(5);
        t_notas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        t_notas.setEnabled(false);
        jScrollPane3.setViewportView(t_notas);

        b_guardar.setBackground(new java.awt.Color(2, 135, 242));
        b_guardar.setForeground(new java.awt.Color(254, 254, 254));
        b_guardar.setText("Guardar");
        b_guardar.setEnabled(false);
        b_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_guardarActionPerformed(evt);
            }
        });

        b_cancelar.setBackground(new java.awt.Color(2, 135, 242));
        b_cancelar.setForeground(new java.awt.Color(254, 254, 254));
        b_cancelar.setText("Cancelar");
        b_cancelar.setEnabled(false);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(c_estado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_pasillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_rack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c_nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_modifico, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(176, 176, 176)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t_id, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_recibio))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_entrada))
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(b_cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_guardar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t_partida, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel12)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(t_sub_partida, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(b_busca_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel14))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(t_modifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(c_pasillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(c_rack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(c_nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t_orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_partida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_sub_partida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(b_busca_orden, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(c_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_recibio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(t_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_guardar)
                    .addComponent(b_cancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Selecciona2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Selecciona2ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        session = HibernateUtil.getSessionFactory().openSession();
        usr = (Usuario)session.get(Usuario.class, usr.getIdUsuario());
        if(usr.getMivimientoMuestra()==true)
        {
            borra();
            habilita(true);
            b_guardar.setText("Guardar");
        }
        else
        JOptionPane.showMessageDialog(null, "춰Acceso denegado!");
    }//GEN-LAST:event_Selecciona2ActionPerformed

    private void Eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Eliminar1ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        session = HibernateUtil.getSessionFactory().openSession();
        usr = (Usuario)session.get(Usuario.class, usr.getIdUsuario());
        if(usr.getCancelaMuestra()==true)
        {
            if(this.t_datos.getSelectedRow()>=0)
            {
                DefaultTableModel model = (DefaultTableModel) t_datos.getModel();
                int opt=JOptionPane.showConfirmDialog(this, "춰Los datos capturados se eliminar치n!");
                if (JOptionPane.YES_OPTION == opt)
                {
                    boolean respuesta=elimina(t_datos.getValueAt(t_datos.getSelectedRow(), 0).toString());
                    if(respuesta==true)
                    {
                        borra();
                        habilita(false);
                        JOptionPane.showMessageDialog(null, "춰Registro eliminado!");
                        buscaDato();
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "춰Selecciona la entrada a eliminar!");
            }
        }
        else
            JOptionPane.showMessageDialog(null, "춰Acceso denegado!");
    }//GEN-LAST:event_Eliminar1ActionPerformed

    private void Selecciona3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Selecciona3ActionPerformed
        h=new Herramientas(usr, 0);
        h.session(sessionPrograma);
        session = HibernateUtil.getSessionFactory().openSession();
        usr = (Usuario)session.get(Usuario.class, usr.getIdUsuario());
        if(usr.getConsultaMuestra()==true || usr.getCancelaMuestra())
        {
            if(t_datos.getSelectedRow()>-1)
            {
                borra();
                cargaPerdidas();
                if(usr.getMivimientoMuestra()==true)
                {
                    habilita(true);
                    b_guardar.setText("Actualizar");
                }
            }
            else
                JOptionPane.showMessageDialog(null, "Selecciona un registro de la tabla");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "춰Acceso denegado!");
        }
        if(session!=null)
            if(session.isOpen())
                session.close();
    }//GEN-LAST:event_Selecciona3ActionPerformed

    private void bt_actualiza1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_actualiza1ActionPerformed
        //this.borra_cajas();
        //this.cajas(false, false, false);
        buscaDato();
    }//GEN-LAST:event_bt_actualiza1ActionPerformed

    private void b_busca_ordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_busca_ordenActionPerformed
        h=new Herramientas(usr, menu);
        h.session(sessionPrograma);
        buscaOrden1 obj = new buscaOrden1(new javax.swing.JFrame(), true, sessionPrograma, usr);
            obj.t_busca.requestFocus();
            Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
            obj.setLocation((d.width/2)-(obj.getWidth()/2), (d.height/2)-(obj.getHeight()/2));
            obj.setVisible(true);
            List orden=obj.getReturnStatus();
        if (orden!=null)
        {
            this.t_orden.setText(""+orden.get(0));
            this.t_partida.setText(""+orden.get(1));
            this.t_sub_partida.setText(""+orden.get(2));
        }
        else
        {
            this.t_orden.setText("");
            this.t_partida.setText("");
            this.t_sub_partida.setText("");
        }
    }//GEN-LAST:event_b_busca_ordenActionPerformed

    private void c_estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_estadoActionPerformed
        // TODO add your handling code here:
        if(c_estado.getSelectedItem().toString().compareTo("ENTREGADO")==0)
            t_recibio.setEnabled(true);
        else
            t_recibio.setEnabled(false);
    }//GEN-LAST:event_c_estadoActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        // TODO add your handling code here:
        int opt=JOptionPane.showConfirmDialog(this, "춰Los capturados se eliminar치n!");
        if (JOptionPane.YES_OPTION == opt)
        {
            borra();
            this.habilita(false);
            this.t_recibio.setEnabled(false);
        }
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_guardarActionPerformed
        // TODO add your handling code here:
        if(b_guardar.getText().compareTo("Guardar")==0)
        {
            h=new Herramientas(usr, 0);
            h.session(sessionPrograma);
            session = HibernateUtil.getSessionFactory().openSession();
            usr = (Usuario)session.get(Usuario.class, usr.getIdUsuario());
            if(usr.getMivimientoMuestra()==true)
            {
                if(t_descripcion.getText().trim().compareTo("")!=0)
                {
                    try   
                    {
                        session.beginTransaction();
                        Perdidas per=new Perdidas();
                        if(t_orden.getText().compareTo("")!=0)
                        {
                            Partida par = (Partida)session.createCriteria(Partida.class).
                                            add(Restrictions.eq("ordenByIdOrden.idOrden", Integer.parseInt(t_orden.getText()))).
                                            add(Restrictions.eq("idEvaluacion", Integer.parseInt(t_partida.getText()))).
                                            add(Restrictions.eq("subPartida", Integer.parseInt(t_sub_partida.getText()))).uniqueResult();
                            if(par!=null)
                                per.setPartida(par);
                            System.out.println("valor:"+par.getIdPartida());
                        }
                        else
                            per.setPartida(null);
                        Calendar calendario = Calendar.getInstance();
                        per.setFechaEntrada(calendario.getTime());
                        per.setUsuario(usr);
                        per.setPasillo(Integer.parseInt(c_pasillo.getSelectedItem().toString()));
                        per.setRack(Integer.parseInt(c_rack.getSelectedItem().toString()));
                        per.setNivel(Integer.parseInt(c_nivel.getSelectedItem().toString()));
                        per.setEstado(c_estado.getSelectedItem().toString());
                        per.setRecibio(t_recibio.getText().trim());
                        per.setDescripcion(t_descripcion.getText().trim());
                        per.setNotas(t_notas.getText().trim());
                        int id=(int)session.save(per);
                        session.getTransaction().commit();
                        borra();
                        habilita(false);
                        session.close();
                        JOptionPane.showMessageDialog(null, "Registro almacenado con el id:"+id);
                        buscaDato();
                    }
                    catch (HibernateException he)
                    {
                        he.printStackTrace(); 
                        session.getTransaction().rollback();
                        JOptionPane.showMessageDialog(null, "Error al guardar los datos");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "춰Ingrese la descripci칩n!");
                    t_descripcion.requestFocus();
                }
            }
            else
                JOptionPane.showMessageDialog(null, "춰Acceso denegado!");
            if(session!=null)
            if(session.isOpen())
                session.close();
        }
        if(b_guardar.getText().compareTo("Actualizar")==0)
        {
            h=new Herramientas(usr, 0);
            h.session(sessionPrograma);
            session = HibernateUtil.getSessionFactory().openSession();
            usr = (Usuario)session.get(Usuario.class, usr.getIdUsuario());
            if(usr.getMivimientoMuestra()==true)
            {
                if(t_descripcion.getText().trim().compareTo("")!=0)
                {
                    try   
                    {
                        session.beginTransaction();
                        Perdidas per=(Perdidas)session.get(Perdidas.class, Integer.parseInt(t_id.getText()));
                        if(t_orden.getText().compareTo("")!=0)
                        {
                            Partida par = (Partida)session.createCriteria(Partida.class).
                                            add(Restrictions.eq("ordenByIdOrden.idOrden", Integer.parseInt(t_orden.getText()))).
                                            add(Restrictions.eq("idEvaluacion", Integer.parseInt(t_partida.getText()))).
                                            add(Restrictions.eq("subPartida", Integer.parseInt(t_sub_partida.getText()))).uniqueResult();
                            if(par!=null)
                                per.setPartida(par);
                        }
                        else
                            per.setPartida(null);
                        Calendar calendario = Calendar.getInstance();
                        per.setFechaEntrada(calendario.getTime());
                        per.setUsuario(usr);
                        per.setPasillo(Integer.parseInt(c_pasillo.getSelectedItem().toString()));
                        per.setRack(Integer.parseInt(c_rack.getSelectedItem().toString()));
                        per.setNivel(Integer.parseInt(c_nivel.getSelectedItem().toString()));
                        per.setEstado(c_estado.getSelectedItem().toString());
                        per.setRecibio(t_recibio.getText().trim());
                        per.setDescripcion(t_descripcion.getText().trim());
                        per.setNotas(t_notas.getText().trim());
                        session.update(per);
                        session.getTransaction().commit();
                        borra();
                        habilita(false);
                        session.close();
                        JOptionPane.showMessageDialog(null, "Registro actualizado");
                        buscaDato();
                    }
                    catch (HibernateException he)
                    {
                        he.printStackTrace(); 
                        session.getTransaction().rollback();
                        JOptionPane.showMessageDialog(null, "Error al guardar los datos");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "춰Ingrese la descripci칩n!");
                    t_descripcion.requestFocus();
                }
            }
            else
                JOptionPane.showMessageDialog(null, "춰Acceso denegado!");
            if(session!=null)
            if(session.isOpen())
                session.close();
        }
    }//GEN-LAST:event_b_guardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar1;
    private javax.swing.JButton Selecciona2;
    private javax.swing.JButton Selecciona3;
    public javax.swing.JButton b_busca_orden;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_guardar;
    private javax.swing.JButton bt_actualiza1;
    private javax.swing.JComboBox c_estado;
    private javax.swing.JComboBox c_nivel;
    private javax.swing.JComboBox c_pasillo;
    private javax.swing.JComboBox c_rack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable t_datos;
    private javax.swing.JTextArea t_descripcion;
    private javax.swing.JTextField t_entrada;
    private javax.swing.JTextField t_id;
    private javax.swing.JTextField t_modifico;
    private javax.swing.JTextArea t_notas;
    public javax.swing.JTextField t_orden;
    private javax.swing.JTextField t_partida;
    private javax.swing.JTextField t_recibio;
    private javax.swing.JTextField t_sub_partida;
    // End of variables declaration//GEN-END:variables

private List<Object[]> executeHQLQuery(String hql) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            session.getTransaction().commit();
            session.disconnect();
            return resultList;
        } catch (HibernateException he) {
            he.printStackTrace();
            List lista= null;
            return lista;
        }
        finally
        {
            if(session.isOpen())
            session.close();
        }
    }
    
    private void buscaDato()
    {
        String consulta="from Perdidas";
        List <Object[]> resultList=executeHQLQuery(consulta);
        if(resultList.size()>0)
        {
            t_datos.setModel(ModeloTablaReporte(resultList.size(), columnas));
            int i=0;
            for (Object o : resultList)
            {
                Perdidas actor = (Perdidas) o;
                model.setValueAt(""+actor.getIdPerdida(), i, 0);
                model.setValueAt(actor.getDescripcion(), i, 1);
                model.setValueAt(""+actor.getPasillo(), i, 2);
                model.setValueAt(""+actor.getRack(), i, 3);
                model.setValueAt(""+actor.getNivel(), i, 4);
                model.setValueAt(actor.getFechaEntrada(), i, 5);
                model.setValueAt(actor.getEstado(), i, 6);
                i++;
            }
        }else
            t_datos.setModel(ModeloTablaReporte(0, columnas));
        formatoTabla();
    }
    void habilita(boolean edo)
    {
        t_descripcion.setEnabled(edo);
        c_pasillo.setEnabled(edo);
        c_rack.setEnabled(edo);
        c_nivel.setEnabled(edo);
        c_estado.setEnabled(edo);
        t_notas.setEnabled(edo);
        b_cancelar.setEnabled(edo);
        b_guardar.setEnabled(edo);
        b_busca_orden.setEnabled(edo);
    }
    void borra()
    {
        t_modifico.setText("");
        t_id.setText("");
        t_descripcion.setText("");
        c_pasillo.setSelectedItem("1");
        c_rack.setSelectedItem("1");
        c_nivel.setSelectedItem("1");
        t_orden.setText("");
        t_partida.setText("");
        t_sub_partida.setText("");
        c_estado.setSelectedItem("DA칌O TOTAL");
        t_recibio.setText("");
        t_entrada.setText("");
        t_notas.setText("");
    }
    void cargaPerdidas()
    {
        h=new Herramientas(this.usr, 0);
        h.session(sessionPrograma);
        session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction();
            Perdidas obj = (Perdidas)session.get(Perdidas.class, Integer.parseInt(t_datos.getValueAt(t_datos.getSelectedRow(), 0).toString()));
            t_modifico.setText(obj.getUsuario().getEmpleado().getNombre());
            t_id.setText(""+obj.getIdPerdida());
            t_descripcion.setText(obj.getDescripcion());
            c_pasillo.setSelectedItem(""+obj.getPasillo());
            c_rack.setSelectedItem(""+obj.getRack());
            c_nivel.setSelectedItem(""+obj.getNivel());
            if(obj.getPartida()!=null)
            {
                t_orden.setText(""+obj.getPartida().getOrdenByIdOrden().getIdOrden());
                t_partida.setText(""+obj.getPartida().getIdEvaluacion());
                t_sub_partida.setText(""+obj.getPartida().getSubPartida());
            }
            c_estado.setSelectedItem(obj.getEstado());
            if(c_estado.getSelectedItem().toString().compareTo("ENTREGADO")==0)
                t_recibio.setEnabled(true);
            else
                t_recibio.setEnabled(false);
            t_recibio.setText(obj.getRecibio());
            t_entrada.setText(obj.getFechaEntrada().toString());
            t_notas.setText(obj.getNotas());
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private boolean elimina(String idPerdida)
    {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try
        {
            session.beginTransaction();
            Perdidas actor = (Perdidas)session.get(Perdidas.class, Integer.parseInt(idPerdida));
            if(actor!=null)
            {
                session.delete(actor);
                session.getTransaction().commit();
                return true;
            }
            else
            {
                session.getTransaction().rollback();
                JOptionPane.showMessageDialog(null, "춰No se encontro la entrada!");
                return false;
            }
        }catch(Exception e)
        {
            e.printStackTrace();
            session.getTransaction().rollback();
            return false;
        }
    }
}
