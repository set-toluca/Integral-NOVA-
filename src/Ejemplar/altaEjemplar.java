
package Ejemplar;

import Integral.Herramientas;
import Integral.ExtensionFileFilter;
import Integral.Imagen;
import Hibernate.Util.HibernateUtil;
import java.util.List;
import javax.swing.InputMap;
import Hibernate.entidades.Ejemplar;
import Hibernate.entidades.Marca;
import Hibernate.entidades.Tipo;
import Hibernate.entidades.Usuario;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;

public class altaEjemplar extends javax.swing.JDialog {

    public static final Ejemplar RET_CANCEL =null;
    InputMap map = new InputMap();
    DefaultTableModel model;
    String[] marca;
    String[] tipo;
    int[] catalogo;
    //private Session session;
    Usuario user;
    String sessionPrograma;
    Herramientas h;
    File archivo=null;
    int entro_foto=0;
    int inventario=0;
  
    public altaEjemplar(java.awt.Frame parent, boolean modal, Usuario u, String ses, int inventario) {        
        super(parent, modal);
        this.inventario=inventario;
        user=u;
        sessionPrograma=ses;
        initComponents();
        cargaMarca();
        cargaTipo();
        this.t_numero.requestFocus();
        user=u;
    }
    
    private void doClose(Ejemplar o) {
        returnStatus = o;
        setVisible(false);
        dispose();
    }
    
    public Ejemplar getReturnStatus() {
        return returnStatus;
    }    
    
    private boolean guardaFoto(String no)
    {
        try {        
            if(archivo.exists()==true)
            {
                File folder = new File("ejemplar");
                folder.mkdirs();
                folder = new File("ejemplar/miniatura");
                folder.mkdirs();
                Random rng=new Random();
                long  dig8 = rng.nextInt(90000000)+10000000;
                File destino = new File("ejemplar/"+no);
                File miniatura = new File("ejemplar/miniatura/"+no);
                String ruta=archivo.getPath();
                javax.swing.JPanel p=new Imagen(ruta, 385, 250, 0, 0, 385, 250);
                BufferedImage dibujo =new BufferedImage(385, 250, BufferedImage.TYPE_INT_RGB);
                Graphics g = dibujo.getGraphics();
                p.paint(g);
                ImageIO.write((RenderedImage)dibujo, "jpg", miniatura); // Salvar la imagen en el fichero
                BufferedImage dibujoGrande =ImageIO.read(archivo);
                ImageIO.write((RenderedImage)dibujoGrande, "jpg", destino); // Salvar la imagen en el fichero*/
                return true;
            }
            return false;
        } 
        catch (Exception ioe)
        {
            ioe.printStackTrace();
            System.out.println("Error al guardar archivo.");
            return false;
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        t_numero = new javax.swing.JTextField();
        l_modelo = new javax.swing.JLabel();
        t_modelo = new javax.swing.JTextField();
        l_marca = new javax.swing.JLabel();
        c_marca = new javax.swing.JComboBox();
        l_tipo = new javax.swing.JLabel();
        c_tipo = new javax.swing.JComboBox();
        l_catalogo = new javax.swing.JLabel();
        l_comentario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_comentario = new javax.swing.JTextArea();
        b_guardar = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        t_catalogo = new javax.swing.JTextField();
        p_foto = new javax.swing.JPanel();
        l_tipo1 = new javax.swing.JLabel();
        medida = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alta de articulos");
        setBackground(new java.awt.Color(254, 254, 254));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel20.setText("No° parte:");

        t_numero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_numeroKeyTyped(evt);
            }
        });

        l_modelo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_modelo.setText("Modelo:");

        t_modelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_modeloKeyTyped(evt);
            }
        });

        l_marca.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_marca.setText("Marca:");

        l_tipo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_tipo.setText("Tipo:");

        l_catalogo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_catalogo.setText("Descripción:");

        l_comentario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_comentario.setText("Comentario");

        t_comentario.setColumns(20);
        t_comentario.setRows(5);
        t_comentario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_comentarioKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(t_comentario);

        b_guardar.setBackground(new java.awt.Color(2, 135, 242));
        b_guardar.setForeground(new java.awt.Color(254, 254, 254));
        b_guardar.setIcon(new ImageIcon("imagenes/guardar.png"));
        b_guardar.setText("Guardar");
        b_guardar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_guardarActionPerformed(evt);
            }
        });

        b_cancelar.setBackground(new java.awt.Color(2, 135, 242));
        b_cancelar.setForeground(new java.awt.Color(254, 254, 254));
        b_cancelar.setIcon(new ImageIcon("imagenes/cancelar.png"));
        b_cancelar.setText("Cancelar");
        b_cancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Nota: Los articulos son cada una de las refacciones y materiales");

        t_catalogo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t_catalogoKeyTyped(evt);
            }
        });

        p_foto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        p_foto.setMinimumSize(new java.awt.Dimension(145, 136));
        p_foto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_fotoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout p_fotoLayout = new javax.swing.GroupLayout(p_foto);
        p_foto.setLayout(p_fotoLayout);
        p_fotoLayout.setHorizontalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );
        p_fotoLayout.setVerticalGroup(
            p_fotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 134, Short.MAX_VALUE)
        );

        l_tipo1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        l_tipo1.setText("Unidad:");

        medida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PZAS", "LTS", "MTS", "CMS", "MMS", "GRS", "MLS", "KGS", "HRS", "MIN", "KIT", "FT", "LB", "JGO", "NA" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel20))
                            .addComponent(l_marca, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(c_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(l_tipo)
                                .addGap(18, 18, 18)
                                .addComponent(c_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 27, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(t_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(l_modelo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_catalogo)
                                    .addComponent(l_comentario))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(t_catalogo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(l_tipo1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(medida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(16, 16, 16)
                                .addComponent(p_foto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_numero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_modelo)
                    .addComponent(t_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_catalogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_tipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(medida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_comentario)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(p_foto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        t_modelo.requestFocus();
        int opt=JOptionPane.showConfirmDialog(this, "¡Los datos capturados se eliminarán!");
        System.out.println(opt);
        if(opt==0)
        {
            borra_cajas();
        }
    }//GEN-LAST:event_b_cancelarActionPerformed

    private void b_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_guardarActionPerformed
        b_cancelar.requestFocus(); 
        h=new Herramientas(user, 0);
        h.session(sessionPrograma);
        if(t_catalogo.getText().compareTo("")!=0)
        {
            if(t_numero.getText().compareTo("")!=0)
            {
                Session session = HibernateUtil.getSessionFactory().openSession();
                try 
                {

                    session.beginTransaction();
                    boolean nuevo=true;
                    Ejemplar art = (Ejemplar)session.createCriteria(Ejemplar.class).add(Restrictions.eq("idParte", this.t_numero.getText())).setMaxResults(1).uniqueResult();
                    if(art!=null)
                    {
                        if(art.getInventario()==inventario)
                        {
                            session.getTransaction().rollback();
                            this.setAlwaysOnTop(false);
                            JOptionPane.showMessageDialog(null, "¡El artículo ya existe!");
                            this.setAlwaysOnTop(true);
                        }
                        else
                        {
                            if(inventario==1)
                            {
                                art.setInventario(1);
                                session.update(art);
                                session.beginTransaction().commit();
                                this.setAlwaysOnTop(false);
                                JOptionPane.showMessageDialog(null, "Registro almacenado");
                                this.setAlwaysOnTop(true);
                            }
                            else
                            {
                                session.getTransaction().rollback();
                                this.setAlwaysOnTop(false);
                                JOptionPane.showMessageDialog(null, "¡El artículo ya existe en el catalogo de almacen!");
                                this.setAlwaysOnTop(true);
                            }
                        }
                    }
                    else
                    {
                        art= new Ejemplar();
                        art.setIdParte(t_numero.getText().trim());
                        if(t_modelo.getText().compareTo("")!=0)
                            art.setModelo(Integer.parseInt(t_modelo.getText()));
                        if(c_marca.getSelectedIndex()>0)
                        {
                            Marca marc = (Marca)session.get(Marca.class,marca[c_marca.getSelectedIndex()]);
                            art.setMarca(marc);
                        }
                        if(c_tipo.getSelectedIndex()>0)
                        {
                            Tipo tip= (Tipo)session.get(Tipo.class,tipo[c_tipo.getSelectedIndex()]);
                            art.setTipo(tip);
                        }
                        art.setCatalogo(t_catalogo.getText());
                        art.setComentario(t_comentario.getText());
                        art.setInventario(inventario);
                        art.setMedida(medida.getSelectedItem().toString());
                        art.setExistencias(0.0);
                        if(entro_foto==1)
                        {
                            Random rng=new Random();
                            long  dig8 = rng.nextInt(90000000)+10000000;
                            String nombreFoto=""+dig8+".jpg";
                            guardaFoto(nombreFoto);
                            art.setImagen(nombreFoto);
                        }
                        session.save(art);
                        session.getTransaction().commit();
                        this.setAlwaysOnTop(false);
                        JOptionPane.showMessageDialog(null, "Registro almacenado");
                        this.setAlwaysOnTop(true);
                        borra_cajas();
                        t_modelo.requestFocus();
                    }
                }
                catch (HibernateException he) 
                {
                    he.printStackTrace();
                    session.getTransaction().rollback();
                    this.setAlwaysOnTop(false);
                    JOptionPane.showMessageDialog(null, "Error al guardar");
                    this.setAlwaysOnTop(true);
                }
                finally 
                {
                    session.close(); 
                }
            }
            else
            {
                this.setAlwaysOnTop(false);
                JOptionPane.showMessageDialog(null, "¡El número de parte no puede ir vacio!");
                this.setAlwaysOnTop(true);
                t_numero.requestFocus();
            }
        }
        else
        {
            this.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(null, "¡Debe introducir la descripción!");
            this.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_b_guardarActionPerformed

    private void t_modeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_modeloKeyTyped
        char car = evt.getKeyChar();
        if(this.t_modelo.getText().length()>=4)
        evt.consume();
        if((car<'0' || car>'9'))
        evt.consume();
    }//GEN-LAST:event_t_modeloKeyTyped

    private void t_comentarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_comentarioKeyTyped
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_comentario.getText().length()>=100)
            evt.consume();
    }//GEN-LAST:event_t_comentarioKeyTyped

    private void t_numeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_numeroKeyTyped
        // TODO add your handling code here:
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
        if(t_numero.getText().length()>=35)
            evt.consume();
    }//GEN-LAST:event_t_numeroKeyTyped

    private void t_catalogoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_catalogoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_t_catalogoKeyTyped

    private void p_fotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_fotoMouseClicked
        // TODO add your handling code here:
        if(t_numero.isEnabled()==true)
        {
            JFileChooser selector=new JFileChooser();
            selector.setFileFilter(new ExtensionFileFilter("JPG and JPEG", new String[] { "JPG", "JPEG" }));
            int estado=1;
            estado=selector.showOpenDialog(null);
            if(estado==0)
            {
                archivo=selector.getSelectedFile();
                try
                {
                    if(archivo.exists())
                    {
                        String ruta=archivo.getPath();
                        p_foto.removeAll();
                        p_foto.add(new Imagen(ruta, 144, 135, 1, 1, 144, 135));
                        p_foto.repaint();
                        entro_foto=1;
                    }
                    else
                    javax.swing.JOptionPane.showMessageDialog(null, "No se pudo cargar la imagen");
                }catch(Exception e){}
            }
        }
    }//GEN-LAST:event_p_fotoMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_guardar;
    public javax.swing.JComboBox c_marca;
    public javax.swing.JComboBox c_tipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_catalogo;
    private javax.swing.JLabel l_comentario;
    private javax.swing.JLabel l_marca;
    private javax.swing.JLabel l_modelo;
    private javax.swing.JLabel l_tipo;
    private javax.swing.JLabel l_tipo1;
    private javax.swing.JComboBox medida;
    private javax.swing.JPanel p_foto;
    public javax.swing.JTextField t_catalogo;
    public javax.swing.JTextArea t_comentario;
    public javax.swing.JTextField t_modelo;
    public javax.swing.JTextField t_numero;
    // End of variables declaration//GEN-END:variables

    private List<Object[]> executeHQLQuery(String hql) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        try {
            session.beginTransaction();
            Query q = session.createQuery(hql);
            List resultList = q.list();
            session.getTransaction().commit();
            session.disconnect();
            return resultList;
        } catch (HibernateException he) {
            he.printStackTrace();
            List lista= null;
            return lista;
        }
    }

    private void borra_cajas()
    {
        t_modelo.setText("");
        t_catalogo.setText("");
        t_comentario.setText("");
        this.t_numero.setText("");
        entro_foto=0;
        archivo=null;
        p_foto.removeAll();
        p_foto.repaint();
    }
    
    public void cargaMarca()
    {
        List <Object[]> resultList=executeHQLQuery("from Marca");
        if(resultList.size()>0)
        {
            c_marca.removeAllItems();
            marca= new String [resultList.size()+1];
            c_marca.addItem("NA");
            marca[0]="";
            int x=1;
            for (Object o : resultList)
            {
                Marca actor = (Marca) o;
                c_marca.addItem(actor.getMarcaNombre());
                marca[x]=actor.getIdMarca();
                x++;
            }
        }
    }
    
    public void cargaTipo()
    {
        List <Object[]> resultList=executeHQLQuery("from Tipo");
        if(resultList.size()>0)
        {
            c_tipo.removeAllItems();
            tipo= new String [resultList.size()+1];
            c_tipo.addItem("NA");
            tipo[0]="";
            int x=1;
            for (Object o : resultList)
            {
                Tipo actor = (Tipo) o;
                c_tipo.addItem(actor.getTipoNombre());
                tipo[x]=actor.getTipoNombre();
                x++;
            }
        }
    }
    
    private Ejemplar returnStatus = RET_CANCEL;
}